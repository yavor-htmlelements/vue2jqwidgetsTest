{"remainingRequest":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxtree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxtree.vue","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport '../jqwidgets/jqxcore.js';\nimport '../jqwidgets/jqxdata.js';\nimport '../jqwidgets/jqxbuttons.js';\nimport '../jqwidgets/jqxscrollbar.js';\nimport '../jqwidgets/jqxpanel.js';\nimport '../jqwidgets/jqxdragdrop.js';\nimport '../jqwidgets/jqxtree.js';\nimport '../jqwidgets/jqxcheckbox.js';\n\nexport default {\n    props: {\n        animationShowDuration: Number,\n        animationHideDuration: Number,\n        allowDrag: Boolean,\n        allowDrop: Boolean,\n        checkboxes: Boolean,\n        dragStart: Function,\n        dragEnd: Function,\n        disabled: Boolean,\n        easing: String,\n        enableHover: Boolean,\n        height: [Number, String],\n        hasThreeStates: Boolean,\n        incrementalSearch: Boolean,\n        keyboardNavigation: Boolean,\n        rtl: Boolean,\n        source: [Array, Object],\n        toggleIndicatorSize: Number,\n        toggleMode: String,\n        theme: String,\n        width: [Number, String],\n        autoCreate: {\n            default: true,\n            type: Boolean\n        }\n    },\n    created: function () {\n        this.id = 'jqxTree' + JQXLite.generateID();\n        this.componentSelector = '#' + this.id;\n    },\n    mounted: function () {\n        if (this.autoCreate) this.__createComponent__();\n    },\n    methods: {\n        createComponent: function (options) {\n            if (!this.autoCreate) this.__createComponent__(options)\n            else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n        },\n        setOptions: function (options) {\n            JQXLite(this.componentSelector).jqxTree(options);\n        },\n        getOptions: function () {\n            const usedProps = Object.keys(this.__manageProps__());\n            const resultToReturn = {};\n            for (let i = 0; i < usedProps.length; i++) {\n                resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxTree(usedProps[i]);\n            }\n            return resultToReturn;\n        },\n        addBefore: function(item, id) {\n            JQXLite(this.componentSelector).jqxTree('addBefore', item, id);  \n        },\n        addAfter: function(item, id) {\n            JQXLite(this.componentSelector).jqxTree('addAfter', item, id);  \n        },\n        addTo: function(item, id) {\n            JQXLite(this.componentSelector).jqxTree('addTo', item, id);  \n        },\n        clear: function() {\n            JQXLite(this.componentSelector).jqxTree('clear');  \n        },\n        checkAll: function() {\n            JQXLite(this.componentSelector).jqxTree('checkAll');  \n        },\n        checkItem: function(item, checked) {\n            JQXLite(this.componentSelector).jqxTree('checkItem', item, checked);  \n        },\n        collapseAll: function() {\n            JQXLite(this.componentSelector).jqxTree('collapseAll');  \n        },\n        collapseItem: function(item) {\n            JQXLite(this.componentSelector).jqxTree('collapseItem', item);  \n        },\n        destroy: function() {\n            JQXLite(this.componentSelector).jqxTree('destroy');  \n        },\n        disableItem: function(item) {\n            JQXLite(this.componentSelector).jqxTree('disableItem', item);  \n        },\n        ensureVisible: function(item) {\n            JQXLite(this.componentSelector).jqxTree('ensureVisible', item);  \n        },\n        enableItem: function(item) {\n            JQXLite(this.componentSelector).jqxTree('enableItem', item);  \n        },\n        enableAll: function() {\n            JQXLite(this.componentSelector).jqxTree('enableAll');  \n        },\n        expandAll: function() {\n            JQXLite(this.componentSelector).jqxTree('expandAll');  \n        },\n        expandItem: function(item) {\n            JQXLite(this.componentSelector).jqxTree('expandItem', item);  \n        },\n        focus: function() {\n            JQXLite(this.componentSelector).jqxTree('focus');  \n        },\n        getCheckedItems: function() {\n            return JQXLite(this.componentSelector).jqxTree('getCheckedItems');  \n        },\n        getUncheckedItems: function() {\n            return JQXLite(this.componentSelector).jqxTree('getUncheckedItems');  \n        },\n        getItems: function() {\n            return JQXLite(this.componentSelector).jqxTree('getItems');  \n        },\n        getItem: function(element) {\n            return JQXLite(this.componentSelector).jqxTree('getItem', element);  \n        },\n        getSelectedItem: function() {\n            return JQXLite(this.componentSelector).jqxTree('getSelectedItem');  \n        },\n        getPrevItem: function(item) {\n            return JQXLite(this.componentSelector).jqxTree('getPrevItem', item);  \n        },\n        getNextItem: function(item) {\n            return JQXLite(this.componentSelector).jqxTree('getNextItem', item);  \n        },\n        hitTest: function(left, top) {\n            return JQXLite(this.componentSelector).jqxTree('hitTest', left, top);  \n        },\n        removeItem: function(item) {\n            JQXLite(this.componentSelector).jqxTree('removeItem', item);  \n        },\n        render: function() {\n            JQXLite(this.componentSelector).jqxTree('render');  \n        },\n        refresh: function() {\n            JQXLite(this.componentSelector).jqxTree('refresh');  \n        },\n        selectItem: function(item) {\n            JQXLite(this.componentSelector).jqxTree('selectItem', item);  \n        },\n        uncheckAll: function() {\n            JQXLite(this.componentSelector).jqxTree('uncheckAll');  \n        },\n        uncheckItem: function(item) {\n            JQXLite(this.componentSelector).jqxTree('uncheckItem', item);  \n        },\n        updateItem: function(item, newItem) {\n            JQXLite(this.componentSelector).jqxTree('updateItem', item, newItem);  \n        },\n        val: function(value) {\n            if (value !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('val',  value)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('val');\n            }\n        },\n        _animationShowDuration: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('animationShowDuration', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('animationShowDuration');\n            }\n        },\n        _animationHideDuration: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('animationHideDuration', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('animationHideDuration');\n            }\n        },\n        _allowDrag: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('allowDrag', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('allowDrag');\n            }\n        },\n        _allowDrop: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('allowDrop', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('allowDrop');\n            }\n        },\n        _checkboxes: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('checkboxes', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('checkboxes');\n            }\n        },\n        _dragStart: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('dragStart', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('dragStart');\n            }\n        },\n        _dragEnd: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('dragEnd', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('dragEnd');\n            }\n        },\n        _disabled: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('disabled', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('disabled');\n            }\n        },\n        _easing: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('easing', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('easing');\n            }\n        },\n        _enableHover: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('enableHover', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('enableHover');\n            }\n        },\n        _height: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('height', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('height');\n            }\n        },\n        _hasThreeStates: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('hasThreeStates', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('hasThreeStates');\n            }\n        },\n        _incrementalSearch: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('incrementalSearch', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('incrementalSearch');\n            }\n        },\n        _keyboardNavigation: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('keyboardNavigation', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('keyboardNavigation');\n            }\n        },\n        _rtl: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('rtl', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('rtl');\n            }\n        },\n        _source: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('source', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('source');\n            }\n        },\n        _toggleIndicatorSize: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('toggleIndicatorSize', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('toggleIndicatorSize');\n            }\n        },\n        _toggleMode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('toggleMode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('toggleMode');\n            }\n        },\n        _theme: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('theme', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('theme');\n            }\n        },\n        _width: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxTree('width', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxTree('width');\n            }\n        },\n        __createComponent__: function (options) {\n            let widgetOptions;\n            options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n            JQXLite(this.componentSelector).jqxTree(widgetOptions);\n            this.__extendProps__();\n            this.__wireEvents__();\n        },\n        __manageProps__: function () {\n            const widgetProps = ['animationShowDuration','animationHideDuration','allowDrag','allowDrop','checkboxes','dragStart','dragEnd','disabled','easing','enableHover','height','hasThreeStates','incrementalSearch','keyboardNavigation','rtl','source','toggleIndicatorSize','toggleMode','theme','width'];\n            const componentProps = this.$options.propsData;\n            let options = {};\n\n            for (let prop in componentProps) {\n                if (widgetProps.indexOf(prop) !== -1) {\n                    options[prop] = componentProps[prop];\n                }\n            }\n            return options;\n        },\n        __extendProps__: function () {\n            const that = this;\n\n            Object.defineProperty(that, 'animationShowDuration', {\n                get: function() {\n                    return that._animationShowDuration();\n                },\n                set: function(newValue) {\n                    that._animationShowDuration(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'animationHideDuration', {\n                get: function() {\n                    return that._animationHideDuration();\n                },\n                set: function(newValue) {\n                    that._animationHideDuration(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'allowDrag', {\n                get: function() {\n                    return that._allowDrag();\n                },\n                set: function(newValue) {\n                    that._allowDrag(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'allowDrop', {\n                get: function() {\n                    return that._allowDrop();\n                },\n                set: function(newValue) {\n                    that._allowDrop(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'checkboxes', {\n                get: function() {\n                    return that._checkboxes();\n                },\n                set: function(newValue) {\n                    that._checkboxes(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'dragStart', {\n                get: function() {\n                    return that._dragStart();\n                },\n                set: function(newValue) {\n                    that._dragStart(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'dragEnd', {\n                get: function() {\n                    return that._dragEnd();\n                },\n                set: function(newValue) {\n                    that._dragEnd(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'disabled', {\n                get: function() {\n                    return that._disabled();\n                },\n                set: function(newValue) {\n                    that._disabled(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'easing', {\n                get: function() {\n                    return that._easing();\n                },\n                set: function(newValue) {\n                    that._easing(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enableHover', {\n                get: function() {\n                    return that._enableHover();\n                },\n                set: function(newValue) {\n                    that._enableHover(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'height', {\n                get: function() {\n                    return that._height();\n                },\n                set: function(newValue) {\n                    that._height(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'hasThreeStates', {\n                get: function() {\n                    return that._hasThreeStates();\n                },\n                set: function(newValue) {\n                    that._hasThreeStates(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'incrementalSearch', {\n                get: function() {\n                    return that._incrementalSearch();\n                },\n                set: function(newValue) {\n                    that._incrementalSearch(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'keyboardNavigation', {\n                get: function() {\n                    return that._keyboardNavigation();\n                },\n                set: function(newValue) {\n                    that._keyboardNavigation(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rtl', {\n                get: function() {\n                    return that._rtl();\n                },\n                set: function(newValue) {\n                    that._rtl(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'source', {\n                get: function() {\n                    return that._source();\n                },\n                set: function(newValue) {\n                    that._source(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'toggleIndicatorSize', {\n                get: function() {\n                    return that._toggleIndicatorSize();\n                },\n                set: function(newValue) {\n                    that._toggleIndicatorSize(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'toggleMode', {\n                get: function() {\n                    return that._toggleMode();\n                },\n                set: function(newValue) {\n                    that._toggleMode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'theme', {\n                get: function() {\n                    return that._theme();\n                },\n                set: function(newValue) {\n                    that._theme(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'width', {\n                get: function() {\n                    return that._width();\n                },\n                set: function(newValue) {\n                    that._width(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n        },\n        __wireEvents__: function () {\n            const that = this;\n\n            JQXLite(this.componentSelector).on('added', function (event) { that.$emit('added', event); });\n            JQXLite(this.componentSelector).on('checkChange', function (event) { that.$emit('checkChange', event); });\n            JQXLite(this.componentSelector).on('collapse', function (event) { that.$emit('collapse', event); });\n            JQXLite(this.componentSelector).on('dragStart', function (event) { that.$emit('dragStart', event); });\n            JQXLite(this.componentSelector).on('dragEnd', function (event) { that.$emit('dragEnd', event); });\n            JQXLite(this.componentSelector).on('expand', function (event) { that.$emit('expand', event); });\n            JQXLite(this.componentSelector).on('itemClick', function (event) { that.$emit('itemClick', event); });\n            JQXLite(this.componentSelector).on('removed', function (event) { that.$emit('removed', event); });\n            JQXLite(this.componentSelector).on('select', function (event) { that.$emit('select', event); });\n        }\n    }\n}\n",{"version":3,"sources":["vue_jqxtree.vue"],"names":[],"mappingsfile":"vue_jqxtree.vue","sourceRoot":"node_modules/jqwidgets-scripts/jqwidgets-vue","sourcesContent":["<template>\n    <div v-bind:id=\"id\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import '../jqwidgets/jqxcore.js';\n    import '../jqwidgets/jqxdata.js';\n    import '../jqwidgets/jqxbuttons.js';\n    import '../jqwidgets/jqxscrollbar.js';\n    import '../jqwidgets/jqxpanel.js';\n    import '../jqwidgets/jqxdragdrop.js';\n    import '../jqwidgets/jqxtree.js';\n    import '../jqwidgets/jqxcheckbox.js';\n\n    export default {\n        props: {\n            animationShowDuration: Number,\n            animationHideDuration: Number,\n            allowDrag: Boolean,\n            allowDrop: Boolean,\n            checkboxes: Boolean,\n            dragStart: Function,\n            dragEnd: Function,\n            disabled: Boolean,\n            easing: String,\n            enableHover: Boolean,\n            height: [Number, String],\n            hasThreeStates: Boolean,\n            incrementalSearch: Boolean,\n            keyboardNavigation: Boolean,\n            rtl: Boolean,\n            source: [Array, Object],\n            toggleIndicatorSize: Number,\n            toggleMode: String,\n            theme: String,\n            width: [Number, String],\n            autoCreate: {\n                default: true,\n                type: Boolean\n            }\n        },\n        created: function () {\n            this.id = 'jqxTree' + JQXLite.generateID();\n            this.componentSelector = '#' + this.id;\n        },\n        mounted: function () {\n            if (this.autoCreate) this.__createComponent__();\n        },\n        methods: {\n            createComponent: function (options) {\n                if (!this.autoCreate) this.__createComponent__(options)\n                else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n            },\n            setOptions: function (options) {\n                JQXLite(this.componentSelector).jqxTree(options);\n            },\n            getOptions: function () {\n                const usedProps = Object.keys(this.__manageProps__());\n                const resultToReturn = {};\n                for (let i = 0; i < usedProps.length; i++) {\n                    resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxTree(usedProps[i]);\n                }\n                return resultToReturn;\n            },\n            addBefore: function(item, id) {\n                JQXLite(this.componentSelector).jqxTree('addBefore', item, id);  \n            },\n            addAfter: function(item, id) {\n                JQXLite(this.componentSelector).jqxTree('addAfter', item, id);  \n            },\n            addTo: function(item, id) {\n                JQXLite(this.componentSelector).jqxTree('addTo', item, id);  \n            },\n            clear: function() {\n                JQXLite(this.componentSelector).jqxTree('clear');  \n            },\n            checkAll: function() {\n                JQXLite(this.componentSelector).jqxTree('checkAll');  \n            },\n            checkItem: function(item, checked) {\n                JQXLite(this.componentSelector).jqxTree('checkItem', item, checked);  \n            },\n            collapseAll: function() {\n                JQXLite(this.componentSelector).jqxTree('collapseAll');  \n            },\n            collapseItem: function(item) {\n                JQXLite(this.componentSelector).jqxTree('collapseItem', item);  \n            },\n            destroy: function() {\n                JQXLite(this.componentSelector).jqxTree('destroy');  \n            },\n            disableItem: function(item) {\n                JQXLite(this.componentSelector).jqxTree('disableItem', item);  \n            },\n            ensureVisible: function(item) {\n                JQXLite(this.componentSelector).jqxTree('ensureVisible', item);  \n            },\n            enableItem: function(item) {\n                JQXLite(this.componentSelector).jqxTree('enableItem', item);  \n            },\n            enableAll: function() {\n                JQXLite(this.componentSelector).jqxTree('enableAll');  \n            },\n            expandAll: function() {\n                JQXLite(this.componentSelector).jqxTree('expandAll');  \n            },\n            expandItem: function(item) {\n                JQXLite(this.componentSelector).jqxTree('expandItem', item);  \n            },\n            focus: function() {\n                JQXLite(this.componentSelector).jqxTree('focus');  \n            },\n            getCheckedItems: function() {\n                return JQXLite(this.componentSelector).jqxTree('getCheckedItems');  \n            },\n            getUncheckedItems: function() {\n                return JQXLite(this.componentSelector).jqxTree('getUncheckedItems');  \n            },\n            getItems: function() {\n                return JQXLite(this.componentSelector).jqxTree('getItems');  \n            },\n            getItem: function(element) {\n                return JQXLite(this.componentSelector).jqxTree('getItem', element);  \n            },\n            getSelectedItem: function() {\n                return JQXLite(this.componentSelector).jqxTree('getSelectedItem');  \n            },\n            getPrevItem: function(item) {\n                return JQXLite(this.componentSelector).jqxTree('getPrevItem', item);  \n            },\n            getNextItem: function(item) {\n                return JQXLite(this.componentSelector).jqxTree('getNextItem', item);  \n            },\n            hitTest: function(left, top) {\n                return JQXLite(this.componentSelector).jqxTree('hitTest', left, top);  \n            },\n            removeItem: function(item) {\n                JQXLite(this.componentSelector).jqxTree('removeItem', item);  \n            },\n            render: function() {\n                JQXLite(this.componentSelector).jqxTree('render');  \n            },\n            refresh: function() {\n                JQXLite(this.componentSelector).jqxTree('refresh');  \n            },\n            selectItem: function(item) {\n                JQXLite(this.componentSelector).jqxTree('selectItem', item);  \n            },\n            uncheckAll: function() {\n                JQXLite(this.componentSelector).jqxTree('uncheckAll');  \n            },\n            uncheckItem: function(item) {\n                JQXLite(this.componentSelector).jqxTree('uncheckItem', item);  \n            },\n            updateItem: function(item, newItem) {\n                JQXLite(this.componentSelector).jqxTree('updateItem', item, newItem);  \n            },\n            val: function(value) {\n                if (value !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('val',  value)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('val');\n                }\n            },\n            _animationShowDuration: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('animationShowDuration', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('animationShowDuration');\n                }\n            },\n            _animationHideDuration: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('animationHideDuration', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('animationHideDuration');\n                }\n            },\n            _allowDrag: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('allowDrag', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('allowDrag');\n                }\n            },\n            _allowDrop: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('allowDrop', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('allowDrop');\n                }\n            },\n            _checkboxes: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('checkboxes', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('checkboxes');\n                }\n            },\n            _dragStart: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('dragStart', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('dragStart');\n                }\n            },\n            _dragEnd: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('dragEnd', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('dragEnd');\n                }\n            },\n            _disabled: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('disabled', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('disabled');\n                }\n            },\n            _easing: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('easing', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('easing');\n                }\n            },\n            _enableHover: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('enableHover', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('enableHover');\n                }\n            },\n            _height: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('height', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('height');\n                }\n            },\n            _hasThreeStates: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('hasThreeStates', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('hasThreeStates');\n                }\n            },\n            _incrementalSearch: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('incrementalSearch', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('incrementalSearch');\n                }\n            },\n            _keyboardNavigation: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('keyboardNavigation', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('keyboardNavigation');\n                }\n            },\n            _rtl: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('rtl', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('rtl');\n                }\n            },\n            _source: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('source', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('source');\n                }\n            },\n            _toggleIndicatorSize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('toggleIndicatorSize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('toggleIndicatorSize');\n                }\n            },\n            _toggleMode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('toggleMode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('toggleMode');\n                }\n            },\n            _theme: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('theme', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('theme');\n                }\n            },\n            _width: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxTree('width', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxTree('width');\n                }\n            },\n            __createComponent__: function (options) {\n                let widgetOptions;\n                options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n                JQXLite(this.componentSelector).jqxTree(widgetOptions);\n                this.__extendProps__();\n                this.__wireEvents__();\n            },\n            __manageProps__: function () {\n                const widgetProps = ['animationShowDuration','animationHideDuration','allowDrag','allowDrop','checkboxes','dragStart','dragEnd','disabled','easing','enableHover','height','hasThreeStates','incrementalSearch','keyboardNavigation','rtl','source','toggleIndicatorSize','toggleMode','theme','width'];\n                const componentProps = this.$options.propsData;\n                let options = {};\n\n                for (let prop in componentProps) {\n                    if (widgetProps.indexOf(prop) !== -1) {\n                        options[prop] = componentProps[prop];\n                    }\n                }\n                return options;\n            },\n            __extendProps__: function () {\n                const that = this;\n\n                Object.defineProperty(that, 'animationShowDuration', {\n                    get: function() {\n                        return that._animationShowDuration();\n                    },\n                    set: function(newValue) {\n                        that._animationShowDuration(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'animationHideDuration', {\n                    get: function() {\n                        return that._animationHideDuration();\n                    },\n                    set: function(newValue) {\n                        that._animationHideDuration(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'allowDrag', {\n                    get: function() {\n                        return that._allowDrag();\n                    },\n                    set: function(newValue) {\n                        that._allowDrag(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'allowDrop', {\n                    get: function() {\n                        return that._allowDrop();\n                    },\n                    set: function(newValue) {\n                        that._allowDrop(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'checkboxes', {\n                    get: function() {\n                        return that._checkboxes();\n                    },\n                    set: function(newValue) {\n                        that._checkboxes(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'dragStart', {\n                    get: function() {\n                        return that._dragStart();\n                    },\n                    set: function(newValue) {\n                        that._dragStart(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'dragEnd', {\n                    get: function() {\n                        return that._dragEnd();\n                    },\n                    set: function(newValue) {\n                        that._dragEnd(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'disabled', {\n                    get: function() {\n                        return that._disabled();\n                    },\n                    set: function(newValue) {\n                        that._disabled(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'easing', {\n                    get: function() {\n                        return that._easing();\n                    },\n                    set: function(newValue) {\n                        that._easing(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enableHover', {\n                    get: function() {\n                        return that._enableHover();\n                    },\n                    set: function(newValue) {\n                        that._enableHover(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'height', {\n                    get: function() {\n                        return that._height();\n                    },\n                    set: function(newValue) {\n                        that._height(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'hasThreeStates', {\n                    get: function() {\n                        return that._hasThreeStates();\n                    },\n                    set: function(newValue) {\n                        that._hasThreeStates(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'incrementalSearch', {\n                    get: function() {\n                        return that._incrementalSearch();\n                    },\n                    set: function(newValue) {\n                        that._incrementalSearch(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'keyboardNavigation', {\n                    get: function() {\n                        return that._keyboardNavigation();\n                    },\n                    set: function(newValue) {\n                        that._keyboardNavigation(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rtl', {\n                    get: function() {\n                        return that._rtl();\n                    },\n                    set: function(newValue) {\n                        that._rtl(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'source', {\n                    get: function() {\n                        return that._source();\n                    },\n                    set: function(newValue) {\n                        that._source(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'toggleIndicatorSize', {\n                    get: function() {\n                        return that._toggleIndicatorSize();\n                    },\n                    set: function(newValue) {\n                        that._toggleIndicatorSize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'toggleMode', {\n                    get: function() {\n                        return that._toggleMode();\n                    },\n                    set: function(newValue) {\n                        that._toggleMode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'theme', {\n                    get: function() {\n                        return that._theme();\n                    },\n                    set: function(newValue) {\n                        that._theme(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'width', {\n                    get: function() {\n                        return that._width();\n                    },\n                    set: function(newValue) {\n                        that._width(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            },\n            __wireEvents__: function () {\n                const that = this;\n\n                JQXLite(this.componentSelector).on('added', function (event) { that.$emit('added', event); });\n                JQXLite(this.componentSelector).on('checkChange', function (event) { that.$emit('checkChange', event); });\n                JQXLite(this.componentSelector).on('collapse', function (event) { that.$emit('collapse', event); });\n                JQXLite(this.componentSelector).on('dragStart', function (event) { that.$emit('dragStart', event); });\n                JQXLite(this.componentSelector).on('dragEnd', function (event) { that.$emit('dragEnd', event); });\n                JQXLite(this.componentSelector).on('expand', function (event) { that.$emit('expand', event); });\n                JQXLite(this.componentSelector).on('itemClick', function (event) { that.$emit('itemClick', event); });\n                JQXLite(this.componentSelector).on('removed', function (event) { that.$emit('removed', event); });\n                JQXLite(this.componentSelector).on('select', function (event) { that.$emit('select', event); });\n            }\n        }\n    }\n</script>\n"]}]}