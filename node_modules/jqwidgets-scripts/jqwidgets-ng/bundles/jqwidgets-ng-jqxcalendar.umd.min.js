require('../jqwidgets/jqxcore');
require('../jqwidgets/globalization/globalize');
require('../jqwidgets/jqxbuttons');
require('../jqwidgets/jqxtooltip');
require('../jqwidgets/jqxdatetimeinput');
require('../jqwidgets/jqxcalendar');
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms")):"function"==typeof define&&define.amd?define("jqwidgets-ng/jqxcalendar",["exports","@angular/core","@angular/forms"],e):e(((t=t||self)["jqwidgets-ng"]=t["jqwidgets-ng"]||{},t["jqwidgets-ng"].jqxcalendar={}),t.ng.core,t.ng.forms)}(this,(function(t,e,o){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function n(t,e,o,n){var i,a=arguments.length,r=a<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,o,n);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(r=(a<3?i(r):a>3?i(e,o,r):i(e,o))||r);return a>3&&r&&Object.defineProperty(e,o,r),r}function i(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function a(t,e){var o="function"==typeof Symbol&&t[Symbol.iterator];if(!o)return t;var n,i,a=o.call(t),r=[];try{for(;(void 0===e||e-- >0)&&!(n=a.next()).done;)r.push(n.value)}catch(t){i={error:t}}finally{try{n&&!n.done&&(o=a.return)&&o.call(a)}finally{if(i)throw i.error}}return r}var r=function(){},s=r,h={provide:o.NG_VALUE_ACCESSOR,useExisting:e.forwardRef((function(){return p})),multi:!0},p=function(){function t(t){this.autoCreate=!0,this.properties=["backText","columnHeaderHeight","clearString","culture","dayNameFormat","disabled","enableWeekend","enableViews","enableOtherMonthDays","enableFastNavigation","enableHover","enableAutoNavigation","enableTooltips","forwardText","firstDayOfWeek","height","min","max","navigationDelay","rowHeaderWidth","readOnly","restrictedDates","rtl","stepMonths","showWeekNumbers","showDayNames","showOtherMonthDays","showFooter","selectionMode","specialDates","theme","titleHeight","titleFormat","todayString","value","width"],this.onTouchedCallback=r,this.onChangeCallback=r,this.onBackButtonClick=new e.EventEmitter,this.onChange=new e.EventEmitter,this.onNextButtonClick=new e.EventEmitter,this.onViewChange=new e.EventEmitter,this.elementRef=t}return t.prototype.ngOnInit=function(){this.autoCreate&&this.createComponent()},t.prototype.ngOnChanges=function(t){if(this.host)for(var e=0;e<this.properties.length;e++){var o="attr"+this.properties[e].substring(0,1).toUpperCase()+this.properties[e].substring(1),n=!1;if(void 0!==this[o]){if("object"==typeof this[o]){if(this[o]instanceof Array&&(n=this.arraysEqual(this[o],this.host.jqxCalendar(this.properties[e]))),n)return!1;this.host.jqxCalendar(this.properties[e],this[o]);continue}this[o]!==this.host.jqxCalendar(this.properties[e])&&this.host.jqxCalendar(this.properties[e],this[o])}}},t.prototype.arraysEqual=function(t,e){if(t&&!e||!t&&e)return!1;if(t.length!=e.length)return!1;for(var o=0;o<t.length;o++)if(t[o]!==e[o])return!1;return!0},t.prototype.manageAttributes=function(){for(var t={},e=0;e<this.properties.length;e++){var o="attr"+this.properties[e].substring(0,1).toUpperCase()+this.properties[e].substring(1);void 0!==this[o]&&(t[this.properties[e]]=this[o])}return t},t.prototype.moveClasses=function(t,e){var o,n=t.classList;n.length>0&&(o=e.classList).add.apply(o,function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(a(arguments[e]));return t}(n)),t.className=""},t.prototype.moveStyles=function(t,e){var o=t.style.cssText;e.style.cssText=o,t.style.cssText=""},t.prototype.createComponent=function(t){this.host||(t?JQXLite.extend(t,this.manageAttributes()):t=this.manageAttributes(),this.host=JQXLite(this.elementRef.nativeElement.firstChild),this.moveClasses(this.elementRef.nativeElement,this.host[0]),this.moveStyles(this.elementRef.nativeElement,this.host[0]),this.__wireEvents__(),this.widgetObject=jqwidgets.createInstance(this.host,"jqxCalendar",t))},t.prototype.createWidget=function(t){this.createComponent(t)},t.prototype.__updateRect__=function(){this.host&&this.host.css({width:this.attrWidth,height:this.attrHeight})},t.prototype.writeValue=function(t){this.widgetObject&&this.onChangeCallback(this.host.val())},t.prototype.registerOnChange=function(t){this.onChangeCallback=t},t.prototype.registerOnTouched=function(t){this.onTouchedCallback=t},t.prototype.setOptions=function(t){this.host.jqxCalendar("setOptions",t)},t.prototype.backText=function(t){if(void 0===t)return this.host.jqxCalendar("backText");this.host.jqxCalendar("backText",t)},t.prototype.columnHeaderHeight=function(t){if(void 0===t)return this.host.jqxCalendar("columnHeaderHeight");this.host.jqxCalendar("columnHeaderHeight",t)},t.prototype.clearString=function(t){if(void 0===t)return this.host.jqxCalendar("clearString");this.host.jqxCalendar("clearString",t)},t.prototype.culture=function(t){if(void 0===t)return this.host.jqxCalendar("culture");this.host.jqxCalendar("culture",t)},t.prototype.dayNameFormat=function(t){if(void 0===t)return this.host.jqxCalendar("dayNameFormat");this.host.jqxCalendar("dayNameFormat",t)},t.prototype.disabled=function(t){if(void 0===t)return this.host.jqxCalendar("disabled");this.host.jqxCalendar("disabled",t)},t.prototype.enableWeekend=function(t){if(void 0===t)return this.host.jqxCalendar("enableWeekend");this.host.jqxCalendar("enableWeekend",t)},t.prototype.enableViews=function(t){if(void 0===t)return this.host.jqxCalendar("enableViews");this.host.jqxCalendar("enableViews",t)},t.prototype.enableOtherMonthDays=function(t){if(void 0===t)return this.host.jqxCalendar("enableOtherMonthDays");this.host.jqxCalendar("enableOtherMonthDays",t)},t.prototype.enableFastNavigation=function(t){if(void 0===t)return this.host.jqxCalendar("enableFastNavigation");this.host.jqxCalendar("enableFastNavigation",t)},t.prototype.enableHover=function(t){if(void 0===t)return this.host.jqxCalendar("enableHover");this.host.jqxCalendar("enableHover",t)},t.prototype.enableAutoNavigation=function(t){if(void 0===t)return this.host.jqxCalendar("enableAutoNavigation");this.host.jqxCalendar("enableAutoNavigation",t)},t.prototype.enableTooltips=function(t){if(void 0===t)return this.host.jqxCalendar("enableTooltips");this.host.jqxCalendar("enableTooltips",t)},t.prototype.forwardText=function(t){if(void 0===t)return this.host.jqxCalendar("forwardText");this.host.jqxCalendar("forwardText",t)},t.prototype.firstDayOfWeek=function(t){if(void 0===t)return this.host.jqxCalendar("firstDayOfWeek");this.host.jqxCalendar("firstDayOfWeek",t)},t.prototype.height=function(t){if(void 0===t)return this.host.jqxCalendar("height");this.host.jqxCalendar("height",t)},t.prototype.min=function(t){if(void 0===t)return this.host.jqxCalendar("min");this.host.jqxCalendar("min",t)},t.prototype.max=function(t){if(void 0===t)return this.host.jqxCalendar("max");this.host.jqxCalendar("max",t)},t.prototype.navigationDelay=function(t){if(void 0===t)return this.host.jqxCalendar("navigationDelay");this.host.jqxCalendar("navigationDelay",t)},t.prototype.rowHeaderWidth=function(t){if(void 0===t)return this.host.jqxCalendar("rowHeaderWidth");this.host.jqxCalendar("rowHeaderWidth",t)},t.prototype.readOnly=function(t){if(void 0===t)return this.host.jqxCalendar("readOnly");this.host.jqxCalendar("readOnly",t)},t.prototype.restrictedDates=function(t){if(void 0===t)return this.host.jqxCalendar("restrictedDates");this.host.jqxCalendar("restrictedDates",t)},t.prototype.rtl=function(t){if(void 0===t)return this.host.jqxCalendar("rtl");this.host.jqxCalendar("rtl",t)},t.prototype.stepMonths=function(t){if(void 0===t)return this.host.jqxCalendar("stepMonths");this.host.jqxCalendar("stepMonths",t)},t.prototype.showWeekNumbers=function(t){if(void 0===t)return this.host.jqxCalendar("showWeekNumbers");this.host.jqxCalendar("showWeekNumbers",t)},t.prototype.showDayNames=function(t){if(void 0===t)return this.host.jqxCalendar("showDayNames");this.host.jqxCalendar("showDayNames",t)},t.prototype.showOtherMonthDays=function(t){if(void 0===t)return this.host.jqxCalendar("showOtherMonthDays");this.host.jqxCalendar("showOtherMonthDays",t)},t.prototype.showFooter=function(t){if(void 0===t)return this.host.jqxCalendar("showFooter");this.host.jqxCalendar("showFooter",t)},t.prototype.selectionMode=function(t){if(void 0===t)return this.host.jqxCalendar("selectionMode");this.host.jqxCalendar("selectionMode",t)},t.prototype.specialDates=function(t){if(void 0===t)return this.host.jqxCalendar("specialDates");this.host.jqxCalendar("specialDates",t)},t.prototype.theme=function(t){if(void 0===t)return this.host.jqxCalendar("theme");this.host.jqxCalendar("theme",t)},t.prototype.titleHeight=function(t){if(void 0===t)return this.host.jqxCalendar("titleHeight");this.host.jqxCalendar("titleHeight",t)},t.prototype.titleFormat=function(t){if(void 0===t)return this.host.jqxCalendar("titleFormat");this.host.jqxCalendar("titleFormat",t)},t.prototype.todayString=function(t){if(void 0===t)return this.host.jqxCalendar("todayString");this.host.jqxCalendar("todayString",t)},t.prototype.value=function(t){if(void 0===t)return this.host.jqxCalendar("value");this.host.jqxCalendar("value",t)},t.prototype.width=function(t){if(void 0===t)return this.host.jqxCalendar("width");this.host.jqxCalendar("width",t)},t.prototype.clear=function(){this.host.jqxCalendar("clear")},t.prototype.destroy=function(){this.host.jqxCalendar("destroy")},t.prototype.focus=function(){this.host.jqxCalendar("focus")},t.prototype.addSpecialDate=function(t,e,o){this.host.jqxCalendar("addSpecialDate",t,e,o)},t.prototype.getMinDate=function(){return this.host.jqxCalendar("getMinDate")},t.prototype.getMaxDate=function(){return this.host.jqxCalendar("getMaxDate")},t.prototype.getDate=function(){return this.host.jqxCalendar("getDate")},t.prototype.getRange=function(){return this.host.jqxCalendar("getRange")},t.prototype.navigateForward=function(t){this.host.jqxCalendar("navigateForward",t)},t.prototype.navigateBackward=function(t){this.host.jqxCalendar("navigateBackward",t)},t.prototype.render=function(){this.host.jqxCalendar("render")},t.prototype.refresh=function(){this.host.jqxCalendar("refresh")},t.prototype.setMinDate=function(t){this.host.jqxCalendar("setMinDate",t)},t.prototype.setMaxDate=function(t){this.host.jqxCalendar("setMaxDate",t)},t.prototype.setDate=function(t){this.host.jqxCalendar("setDate",t)},t.prototype.setRange=function(t,e){this.host.jqxCalendar("setRange",t,e)},t.prototype.today=function(){this.host.jqxCalendar("today")},t.prototype.val=function(t,e){return void 0!==t?this.host.jqxCalendar("val",t,e):this.host.jqxCalendar("val")},t.prototype.__wireEvents__=function(){var t=this;this.host.on("backButtonClick",(function(e){t.onBackButtonClick.emit(e)})),this.host.on("change",(function(e){t.onChange.emit(e),t.onChangeCallback(t.host.val())})),this.host.on("nextButtonClick",(function(e){t.onNextButtonClick.emit(e)})),this.host.on("viewChange",(function(e){t.onViewChange.emit(e)}))},t.ctorParameters=function(){return[{type:e.ElementRef}]},n([e.Input("backText"),i("design:type",String)],t.prototype,"attrBackText",void 0),n([e.Input("columnHeaderHeight"),i("design:type",Number)],t.prototype,"attrColumnHeaderHeight",void 0),n([e.Input("clearString"),i("design:type",String)],t.prototype,"attrClearString",void 0),n([e.Input("culture"),i("design:type",String)],t.prototype,"attrCulture",void 0),n([e.Input("dayNameFormat"),i("design:type",String)],t.prototype,"attrDayNameFormat",void 0),n([e.Input("disabled"),i("design:type",Boolean)],t.prototype,"attrDisabled",void 0),n([e.Input("enableWeekend"),i("design:type",Boolean)],t.prototype,"attrEnableWeekend",void 0),n([e.Input("enableViews"),i("design:type",Boolean)],t.prototype,"attrEnableViews",void 0),n([e.Input("enableOtherMonthDays"),i("design:type",Boolean)],t.prototype,"attrEnableOtherMonthDays",void 0),n([e.Input("enableFastNavigation"),i("design:type",Boolean)],t.prototype,"attrEnableFastNavigation",void 0),n([e.Input("enableHover"),i("design:type",Boolean)],t.prototype,"attrEnableHover",void 0),n([e.Input("enableAutoNavigation"),i("design:type",Boolean)],t.prototype,"attrEnableAutoNavigation",void 0),n([e.Input("enableTooltips"),i("design:type",Boolean)],t.prototype,"attrEnableTooltips",void 0),n([e.Input("forwardText"),i("design:type",String)],t.prototype,"attrForwardText",void 0),n([e.Input("firstDayOfWeek"),i("design:type",Number)],t.prototype,"attrFirstDayOfWeek",void 0),n([e.Input("min"),i("design:type",Object)],t.prototype,"attrMin",void 0),n([e.Input("max"),i("design:type",Object)],t.prototype,"attrMax",void 0),n([e.Input("navigationDelay"),i("design:type",Number)],t.prototype,"attrNavigationDelay",void 0),n([e.Input("rowHeaderWidth"),i("design:type",Object)],t.prototype,"attrRowHeaderWidth",void 0),n([e.Input("readOnly"),i("design:type",Boolean)],t.prototype,"attrReadOnly",void 0),n([e.Input("restrictedDates"),i("design:type",Array)],t.prototype,"attrRestrictedDates",void 0),n([e.Input("rtl"),i("design:type",Boolean)],t.prototype,"attrRtl",void 0),n([e.Input("stepMonths"),i("design:type",Number)],t.prototype,"attrStepMonths",void 0),n([e.Input("showWeekNumbers"),i("design:type",Boolean)],t.prototype,"attrShowWeekNumbers",void 0),n([e.Input("showDayNames"),i("design:type",Boolean)],t.prototype,"attrShowDayNames",void 0),n([e.Input("showOtherMonthDays"),i("design:type",Boolean)],t.prototype,"attrShowOtherMonthDays",void 0),n([e.Input("showFooter"),i("design:type",Boolean)],t.prototype,"attrShowFooter",void 0),n([e.Input("selectionMode"),i("design:type",String)],t.prototype,"attrSelectionMode",void 0),n([e.Input("specialDates"),i("design:type",Array)],t.prototype,"attrSpecialDates",void 0),n([e.Input("theme"),i("design:type",String)],t.prototype,"attrTheme",void 0),n([e.Input("titleHeight"),i("design:type",Number)],t.prototype,"attrTitleHeight",void 0),n([e.Input("titleFormat"),i("design:type",String)],t.prototype,"attrTitleFormat",void 0),n([e.Input("todayString"),i("design:type",String)],t.prototype,"attrTodayString",void 0),n([e.Input("value"),i("design:type",Date)],t.prototype,"attrValue",void 0),n([e.Input("width"),i("design:type",Object)],t.prototype,"attrWidth",void 0),n([e.Input("height"),i("design:type",Object)],t.prototype,"attrHeight",void 0),n([e.Input("auto-create"),i("design:type",Boolean)],t.prototype,"autoCreate",void 0),n([e.Output(),i("design:type",Object)],t.prototype,"onBackButtonClick",void 0),n([e.Output(),i("design:type",Object)],t.prototype,"onChange",void 0),n([e.Output(),i("design:type",Object)],t.prototype,"onNextButtonClick",void 0),n([e.Output(),i("design:type",Object)],t.prototype,"onViewChange",void 0),t=n([e.Component({selector:"jqxCalendar",template:"<div><ng-content></ng-content></div>",providers:[h],changeDetection:e.ChangeDetectionStrategy.OnPush}),i("design:paramtypes",[e.ElementRef])],t)}(),d=function(){function t(){}return t=n([e.NgModule({imports:[o.FormsModule],declarations:[p],exports:[p]})],t)}();t.jqxCalendarComponent=p,t.jqxCalendarModule=d,t.ɵ0=s,Object.defineProperty(t,"__esModule",{value:!0})}));
