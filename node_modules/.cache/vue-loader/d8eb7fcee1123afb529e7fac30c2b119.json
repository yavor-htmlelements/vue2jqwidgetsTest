{"remainingRequest":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxgrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxgrid.vue","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport '../jqwidgets/jqxcore.js';\nimport '../jqwidgets/jqxdata.js';\nimport '../jqwidgets/jqxdata.export.js';\nimport '../jqwidgets/jqxbuttons.js';\nimport '../jqwidgets/jqxbuttongroup.js';\nimport '../jqwidgets/jqxscrollbar.js'\nimport '../jqwidgets/jqxmenu.js'\nimport '../jqwidgets/jqxlistbox.js'\nimport '../jqwidgets/jqxdropdownlist.js'\nimport '../jqwidgets/jqxcombobox.js'\nimport '../jqwidgets/jqxnumberinput.js'\nimport '../jqwidgets/jqxcheckbox.js'\nimport '../jqwidgets/globalization/globalize.js'\nimport '../jqwidgets/jqxcalendar.js'\nimport '../jqwidgets/jqxnumberinput.js'\nimport '../jqwidgets/jqxdatetimeinput.js'\nimport '../jqwidgets/jqxgrid.js'\nimport '../jqwidgets/jqxgrid.edit.js'\nimport '../jqwidgets/jqxgrid.pager.js'\nimport '../jqwidgets/jqxgrid.selection.js'\nimport '../jqwidgets/jqxgrid.filter.js'\nimport '../jqwidgets/jqxgrid.sort.js'\nimport '../jqwidgets/jqxgrid.storage.js'\nimport '../jqwidgets/jqxgrid.grouping.js'\nimport '../jqwidgets/jqxgrid.export.js'\nimport '../jqwidgets/jqxgrid.columnsresize.js'\nimport '../jqwidgets/jqxgrid.columnsreorder.js'\nimport '../jqwidgets/jqxgrid.aggregates.js'\n\nexport default {\n    props: {\n        altrows: Boolean,\n        altstart: Number,\n        altstep: Number,\n        autoshowloadelement: Boolean,\n        autoshowfiltericon: Boolean,\n        autoshowcolumnsmenubutton: Boolean,\n        showcolumnlines: Boolean,\n        showrowlines: Boolean,\n        showcolumnheaderlines: Boolean,\n        adaptive: Boolean,\n        adaptivewidth: Number,\n        clipboard: Boolean,\n        closeablegroups: Boolean,\n        columnsmenuwidth: Number,\n        columnmenuopening: Function,\n        columnmenuclosing: Function,\n        cellhover: Function,\n        enablekeyboarddelete: Boolean,\n        enableellipsis: Boolean,\n        enablemousewheel: Boolean,\n        enableanimations: Boolean,\n        enabletooltips: Boolean,\n        enablehover: Boolean,\n        enablebrowserselection: Boolean,\n        everpresentrowposition: String,\n        everpresentrowheight: Number,\n        everpresentrowactions: String,\n        everpresentrowactionsmode: String,\n        filterrowheight: Number,\n        filtermode: String,\n        groupsrenderer: Function,\n        groupcolumnrenderer: Function,\n        groupsexpandedbydefault: Boolean,\n        handlekeyboardnavigation: Function,\n        pagerrenderer: Function,\n        rtl: Boolean,\n        showdefaultloadelement: Boolean,\n        showfiltercolumnbackground: Boolean,\n        showfiltermenuitems: Boolean,\n        showpinnedcolumnbackground: Boolean,\n        showsortcolumnbackground: Boolean,\n        showsortmenuitems: Boolean,\n        showgroupmenuitems: Boolean,\n        showrowdetailscolumn: Boolean,\n        showheader: Boolean,\n        showgroupsheader: Boolean,\n        showaggregates: Boolean,\n        showgroupaggregates: Boolean,\n        showeverpresentrow: Boolean,\n        showfilterrow: Boolean,\n        showemptyrow: Boolean,\n        showstatusbar: Boolean,\n        statusbarheight: Number,\n        showtoolbar: Boolean,\n        selectionmode: String,\n        updatefilterconditions: Function,\n        updatefilterpanel: Function,\n        theme: String,\n        toolbarheight: Number,\n        autoheight: Boolean,\n        autorowheight: Boolean,\n        columnsheight: Number,\n        deferreddatafields: Array,\n        groupsheaderheight: Number,\n        groupindentwidth: Number,\n        height: [String, Number],\n        pagerheight: Number,\n        rowsheight: Number,\n        scrollbarsize: Number,\n        scrollmode: String,\n        scrollfeedback: Function,\n        width: [String, Number],\n        autosavestate: Boolean,\n        autoloadstate: Boolean,\n        columns: Array,\n        columngroups: Array,\n        columnsmenu: Boolean,\n        columnsresize: Boolean,\n        columnsautoresize: Boolean,\n        columnsreorder: Boolean,\n        disabled: Boolean,\n        editable: Boolean,\n        editmode: String,\n        filter: Function,\n        filterable: Boolean,\n        groupable: Boolean,\n        groups: Array,\n        horizontalscrollbarstep: Number,\n        horizontalscrollbarlargestep: Number,\n        initrowdetails: Function,\n        keyboardnavigation: Boolean,\n        localization: Object,\n        pagesize: Number,\n        pagesizeoptions: Array,\n        pagermode: String,\n        pagerbuttonscount: Number,\n        pageable: Boolean,\n        rowdetails: Boolean,\n        rowdetailstemplate: Object,\n        ready: Function,\n        rendered: Function,\n        renderstatusbar: Function,\n        rendertoolbar: Function,\n        rendergridrows: Function,\n        sortable: Boolean,\n        sortmode: String,\n        selectedrowindex: Number,\n        selectedrowindexes: Array,\n        source: Object,\n        sorttogglestates: Number,\n        updatedelay: Number,\n        virtualmode: Boolean,\n        verticalscrollbarstep: Number,\n        verticalscrollbarlargestep: Number,\n        autoCreate: {\n            default: true,\n            type: Boolean\n        }\n    },\n    created: function () {\n        this.id = 'jqxGrid' + JQXLite.generateID();\n        this.componentSelector = '#' + this.id;\n    },\n    mounted: function () {\n        if (this.autoCreate) this.__createComponent__();\n    },\n    methods: {\n        createComponent: function (options) {\n            if (!this.autoCreate) this.__createComponent__(options)\n            else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n        },\n        setOptions: function (options) {\n            JQXLite(this.componentSelector).jqxGrid(options);\n        },\n        getOptions: function () {\n            const usedProps = Object.keys(this.__manageProps__());\n            const resultToReturn = {};\n            for (let i = 0; i < usedProps.length; i++) {\n                resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxGrid(usedProps[i]);\n            }\n            return resultToReturn;\n        },\n        autoresizecolumns: function(type) {\n            JQXLite(this.componentSelector).jqxGrid('autoresizecolumns', type);  \n        },\n        autoresizecolumn: function(dataField, type) {\n            JQXLite(this.componentSelector).jqxGrid('autoresizecolumn', dataField, type);  \n        },\n        beginupdate: function() {\n            JQXLite(this.componentSelector).jqxGrid('beginupdate');  \n        },\n        clear: function() {\n            JQXLite(this.componentSelector).jqxGrid('clear');  \n        },\n        destroy: function() {\n            JQXLite(this.componentSelector).jqxGrid('destroy');  \n        },\n        endupdate: function() {\n            JQXLite(this.componentSelector).jqxGrid('endupdate');  \n        },\n        ensurerowvisible: function(rowBoundIndex) {\n            JQXLite(this.componentSelector).jqxGrid('ensurerowvisible', rowBoundIndex);  \n        },\n        focus: function() {\n            JQXLite(this.componentSelector).jqxGrid('focus');  \n        },\n        getcolumnindex: function(dataField) {\n            return JQXLite(this.componentSelector).jqxGrid('getcolumnindex', dataField);  \n        },\n        getcolumn: function(dataField) {\n            return JQXLite(this.componentSelector).jqxGrid('getcolumn', dataField);  \n        },\n        getcolumnproperty: function(dataField, propertyName) {\n            return JQXLite(this.componentSelector).jqxGrid('getcolumnproperty', dataField, propertyName);  \n        },\n        getrowid: function(rowBoundIndex) {\n            return JQXLite(this.componentSelector).jqxGrid('getrowid', rowBoundIndex);  \n        },\n        getrowdata: function(rowBoundIndex) {\n            return JQXLite(this.componentSelector).jqxGrid('getrowdata', rowBoundIndex);  \n        },\n        getrowdatabyid: function(rowID) {\n            return JQXLite(this.componentSelector).jqxGrid('getrowdatabyid', rowID);  \n        },\n        getrowboundindexbyid: function(rowID) {\n            return JQXLite(this.componentSelector).jqxGrid('getrowboundindexbyid', rowID);  \n        },\n        getrowboundindex: function(rowDisplayIndex) {\n            return JQXLite(this.componentSelector).jqxGrid('getrowboundindex', rowDisplayIndex);  \n        },\n        getrows: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getrows');  \n        },\n        getboundrows: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getboundrows');  \n        },\n        getdisplayrows: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getdisplayrows');  \n        },\n        getdatainformation: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getdatainformation');  \n        },\n        getsortinformation: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getsortinformation');  \n        },\n        getpaginginformation: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getpaginginformation');  \n        },\n        hidecolumn: function(dataField) {\n            JQXLite(this.componentSelector).jqxGrid('hidecolumn', dataField);  \n        },\n        hideloadelement: function() {\n            JQXLite(this.componentSelector).jqxGrid('hideloadelement');  \n        },\n        hiderowdetails: function(rowBoundIndex) {\n            JQXLite(this.componentSelector).jqxGrid('hiderowdetails', rowBoundIndex);  \n        },\n        iscolumnvisible: function(dataField) {\n            return JQXLite(this.componentSelector).jqxGrid('iscolumnvisible', dataField);  \n        },\n        iscolumnpinned: function(dataField) {\n            return JQXLite(this.componentSelector).jqxGrid('iscolumnpinned', dataField);  \n        },\n        localizestrings: function(localizationobject) {\n            JQXLite(this.componentSelector).jqxGrid('localizestrings', localizationobject);  \n        },\n        pincolumn: function(dataField) {\n            JQXLite(this.componentSelector).jqxGrid('pincolumn', dataField);  \n        },\n        refreshdata: function() {\n            JQXLite(this.componentSelector).jqxGrid('refreshdata');  \n        },\n        refresh: function() {\n            JQXLite(this.componentSelector).jqxGrid('refresh');  \n        },\n        render: function() {\n            JQXLite(this.componentSelector).jqxGrid('render');  \n        },\n        scrolloffset: function(top, left) {\n            JQXLite(this.componentSelector).jqxGrid('scrolloffset', top, left);  \n        },\n        scrollposition: function() {\n            return JQXLite(this.componentSelector).jqxGrid('scrollposition');  \n        },\n        showloadelement: function() {\n            JQXLite(this.componentSelector).jqxGrid('showloadelement');  \n        },\n        showrowdetails: function(rowBoundIndex) {\n            JQXLite(this.componentSelector).jqxGrid('showrowdetails', rowBoundIndex);  \n        },\n        setcolumnindex: function(dataField, index) {\n            JQXLite(this.componentSelector).jqxGrid('setcolumnindex', dataField, index);  \n        },\n        setcolumnproperty: function(dataField, propertyName, propertyValue) {\n            JQXLite(this.componentSelector).jqxGrid('setcolumnproperty', dataField, propertyName, propertyValue);  \n        },\n        showcolumn: function(dataField) {\n            JQXLite(this.componentSelector).jqxGrid('showcolumn', dataField);  \n        },\n        unpincolumn: function(dataField) {\n            JQXLite(this.componentSelector).jqxGrid('unpincolumn', dataField);  \n        },\n        updatebounddata: function(type) {\n            JQXLite(this.componentSelector).jqxGrid('updatebounddata', type);  \n        },\n        updating: function() {\n            return JQXLite(this.componentSelector).jqxGrid('updating');  \n        },\n        getsortcolumn: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getsortcolumn');  \n        },\n        removesort: function() {\n            JQXLite(this.componentSelector).jqxGrid('removesort');  \n        },\n        sortby: function(dataField, sortOrder) {\n            JQXLite(this.componentSelector).jqxGrid('sortby', dataField, sortOrder);  \n        },\n        addgroup: function(dataField) {\n            JQXLite(this.componentSelector).jqxGrid('addgroup', dataField);  \n        },\n        cleargroups: function() {\n            JQXLite(this.componentSelector).jqxGrid('cleargroups');  \n        },\n        collapsegroup: function(group) {\n            JQXLite(this.componentSelector).jqxGrid('collapsegroup', group);  \n        },\n        collapseallgroups: function() {\n            JQXLite(this.componentSelector).jqxGrid('collapseallgroups');  \n        },\n        expandallgroups: function() {\n            JQXLite(this.componentSelector).jqxGrid('expandallgroups');  \n        },\n        expandgroup: function(group) {\n            JQXLite(this.componentSelector).jqxGrid('expandgroup', group);  \n        },\n        getrootgroupscount: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getrootgroupscount');  \n        },\n        getgroup: function(groupIndex) {\n            return JQXLite(this.componentSelector).jqxGrid('getgroup', groupIndex);  \n        },\n        insertgroup: function(groupIndex, dataField) {\n            JQXLite(this.componentSelector).jqxGrid('insertgroup', groupIndex, dataField);  \n        },\n        iscolumngroupable: function() {\n            return JQXLite(this.componentSelector).jqxGrid('iscolumngroupable');  \n        },\n        removegroupat: function(groupIndex) {\n            JQXLite(this.componentSelector).jqxGrid('removegroupat', groupIndex);  \n        },\n        removegroup: function(dataField) {\n            JQXLite(this.componentSelector).jqxGrid('removegroup', dataField);  \n        },\n        addfilter: function(dataField, filterGroup, refreshGrid) {\n            JQXLite(this.componentSelector).jqxGrid('addfilter', dataField, filterGroup, refreshGrid);  \n        },\n        applyfilters: function() {\n            JQXLite(this.componentSelector).jqxGrid('applyfilters');  \n        },\n        clearfilters: function() {\n            JQXLite(this.componentSelector).jqxGrid('clearfilters');  \n        },\n        getfilterinformation: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getfilterinformation');  \n        },\n        getcolumnat: function(index) {\n            return JQXLite(this.componentSelector).jqxGrid('getcolumnat', index);  \n        },\n        removefilter: function(dataField, refreshGrid) {\n            JQXLite(this.componentSelector).jqxGrid('removefilter', dataField, refreshGrid);  \n        },\n        refreshfilterrow: function() {\n            JQXLite(this.componentSelector).jqxGrid('refreshfilterrow');  \n        },\n        gotopage: function(pagenumber) {\n            JQXLite(this.componentSelector).jqxGrid('gotopage', pagenumber);  \n        },\n        gotoprevpage: function() {\n            JQXLite(this.componentSelector).jqxGrid('gotoprevpage');  \n        },\n        gotonextpage: function() {\n            JQXLite(this.componentSelector).jqxGrid('gotonextpage');  \n        },\n        addrow: function(rowIds, data, rowPosition) {\n            JQXLite(this.componentSelector).jqxGrid('addrow', rowIds, data, rowPosition);  \n        },\n        begincelledit: function(rowBoundIndex, dataField) {\n            JQXLite(this.componentSelector).jqxGrid('begincelledit', rowBoundIndex, dataField);  \n        },\n        beginrowedit: function(rowBoundIndex) {\n            JQXLite(this.componentSelector).jqxGrid('beginrowedit', rowBoundIndex);  \n        },\n        closemenu: function() {\n            JQXLite(this.componentSelector).jqxGrid('closemenu');  \n        },\n        deleterow: function(rowIds) {\n            JQXLite(this.componentSelector).jqxGrid('deleterow', rowIds);  \n        },\n        endcelledit: function(rowBoundIndex, dataField, confirmChanges) {\n            JQXLite(this.componentSelector).jqxGrid('endcelledit', rowBoundIndex, dataField, confirmChanges);  \n        },\n        endrowedit: function(rowBoundIndex, confirmChanges) {\n            JQXLite(this.componentSelector).jqxGrid('endrowedit', rowBoundIndex, confirmChanges);  \n        },\n        getcell: function(rowBoundIndex, datafield) {\n            return JQXLite(this.componentSelector).jqxGrid('getcell', rowBoundIndex, datafield);  \n        },\n        getcellatposition: function(left, top) {\n            return JQXLite(this.componentSelector).jqxGrid('getcellatposition', left, top);  \n        },\n        getcelltext: function(rowBoundIndex, dataField) {\n            return JQXLite(this.componentSelector).jqxGrid('getcelltext', rowBoundIndex, dataField);  \n        },\n        getcelltextbyid: function(rowID, dataField) {\n            return JQXLite(this.componentSelector).jqxGrid('getcelltextbyid', rowID, dataField);  \n        },\n        getcellvaluebyid: function(rowID, dataField) {\n            return JQXLite(this.componentSelector).jqxGrid('getcellvaluebyid', rowID, dataField);  \n        },\n        getcellvalue: function(rowBoundIndex, dataField) {\n            return JQXLite(this.componentSelector).jqxGrid('getcellvalue', rowBoundIndex, dataField);  \n        },\n        isBindingCompleted: function() {\n            return JQXLite(this.componentSelector).jqxGrid('isBindingCompleted');  \n        },\n        openmenu: function(dataField) {\n            JQXLite(this.componentSelector).jqxGrid('openmenu', dataField);  \n        },\n        setcellvalue: function(rowBoundIndex, dataField, value) {\n            JQXLite(this.componentSelector).jqxGrid('setcellvalue', rowBoundIndex, dataField, value);  \n        },\n        setcellvaluebyid: function(rowID, dataField, value) {\n            JQXLite(this.componentSelector).jqxGrid('setcellvaluebyid', rowID, dataField, value);  \n        },\n        showvalidationpopup: function(rowBoundIndex, dataField, validationMessage) {\n            JQXLite(this.componentSelector).jqxGrid('showvalidationpopup', rowBoundIndex, dataField, validationMessage);  \n        },\n        updaterow: function(rowIds, data) {\n            JQXLite(this.componentSelector).jqxGrid('updaterow', rowIds, data);  \n        },\n        clearselection: function() {\n            JQXLite(this.componentSelector).jqxGrid('clearselection');  \n        },\n        getselectedrowindex: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getselectedrowindex');  \n        },\n        getselectedrowindexes: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getselectedrowindexes');  \n        },\n        getselectedcell: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getselectedcell');  \n        },\n        getselectedcells: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getselectedcells');  \n        },\n        selectcell: function(rowBoundIndex, dataField) {\n            JQXLite(this.componentSelector).jqxGrid('selectcell', rowBoundIndex, dataField);  \n        },\n        selectallrows: function() {\n            JQXLite(this.componentSelector).jqxGrid('selectallrows');  \n        },\n        selectrow: function(rowBoundIndex) {\n            JQXLite(this.componentSelector).jqxGrid('selectrow', rowBoundIndex);  \n        },\n        unselectrow: function(rowBoundIndex) {\n            JQXLite(this.componentSelector).jqxGrid('unselectrow', rowBoundIndex);  \n        },\n        unselectcell: function(rowBoundIndex, dataField) {\n            JQXLite(this.componentSelector).jqxGrid('unselectcell', rowBoundIndex, dataField);  \n        },\n        getcolumnaggregateddata: function(dataField, aggregates) {\n            return JQXLite(this.componentSelector).jqxGrid('getcolumnaggregateddata', dataField, aggregates);  \n        },\n        refreshaggregates: function() {\n            JQXLite(this.componentSelector).jqxGrid('refreshaggregates');  \n        },\n        renderaggregates: function() {\n            JQXLite(this.componentSelector).jqxGrid('renderaggregates');  \n        },\n        exportdata: function(dataType, fileName, exportHeader, rows, exportHiddenColumns, serverURL, charSet) {\n            return JQXLite(this.componentSelector).jqxGrid('exportdata', dataType, fileName, exportHeader, rows, exportHiddenColumns, serverURL, charSet);  \n        },\n        getstate: function() {\n            return JQXLite(this.componentSelector).jqxGrid('getstate');  \n        },\n        loadstate: function(stateobject) {\n            JQXLite(this.componentSelector).jqxGrid('loadstate', stateobject);  \n        },\n        savestate: function() {\n            return JQXLite(this.componentSelector).jqxGrid('savestate');  \n        },\n        _altrows: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('altrows', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('altrows');\n            }\n        },\n        _altstart: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('altstart', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('altstart');\n            }\n        },\n        _altstep: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('altstep', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('altstep');\n            }\n        },\n        _autoshowloadelement: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('autoshowloadelement', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('autoshowloadelement');\n            }\n        },\n        _autoshowfiltericon: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('autoshowfiltericon', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('autoshowfiltericon');\n            }\n        },\n        _autoshowcolumnsmenubutton: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('autoshowcolumnsmenubutton', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('autoshowcolumnsmenubutton');\n            }\n        },\n        _showcolumnlines: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showcolumnlines', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showcolumnlines');\n            }\n        },\n        _showrowlines: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showrowlines', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showrowlines');\n            }\n        },\n        _showcolumnheaderlines: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showcolumnheaderlines', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showcolumnheaderlines');\n            }\n        },\n        _adaptive: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('adaptive', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('adaptive');\n            }\n        },\n        _adaptivewidth: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('adaptivewidth', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('adaptivewidth');\n            }\n        },\n        _clipboard: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('clipboard', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('clipboard');\n            }\n        },\n        _closeablegroups: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('closeablegroups', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('closeablegroups');\n            }\n        },\n        _columnsmenuwidth: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columnsmenuwidth', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columnsmenuwidth');\n            }\n        },\n        _columnmenuopening: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columnmenuopening', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columnmenuopening');\n            }\n        },\n        _columnmenuclosing: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columnmenuclosing', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columnmenuclosing');\n            }\n        },\n        _cellhover: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('cellhover', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('cellhover');\n            }\n        },\n        _enablekeyboarddelete: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('enablekeyboarddelete', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('enablekeyboarddelete');\n            }\n        },\n        _enableellipsis: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('enableellipsis', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('enableellipsis');\n            }\n        },\n        _enablemousewheel: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('enablemousewheel', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('enablemousewheel');\n            }\n        },\n        _enableanimations: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('enableanimations', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('enableanimations');\n            }\n        },\n        _enabletooltips: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('enabletooltips', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('enabletooltips');\n            }\n        },\n        _enablehover: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('enablehover', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('enablehover');\n            }\n        },\n        _enablebrowserselection: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('enablebrowserselection', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('enablebrowserselection');\n            }\n        },\n        _everpresentrowposition: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('everpresentrowposition', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('everpresentrowposition');\n            }\n        },\n        _everpresentrowheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('everpresentrowheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('everpresentrowheight');\n            }\n        },\n        _everpresentrowactions: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('everpresentrowactions', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('everpresentrowactions');\n            }\n        },\n        _everpresentrowactionsmode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('everpresentrowactionsmode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('everpresentrowactionsmode');\n            }\n        },\n        _filterrowheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('filterrowheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('filterrowheight');\n            }\n        },\n        _filtermode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('filtermode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('filtermode');\n            }\n        },\n        _groupsrenderer: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('groupsrenderer', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('groupsrenderer');\n            }\n        },\n        _groupcolumnrenderer: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('groupcolumnrenderer', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('groupcolumnrenderer');\n            }\n        },\n        _groupsexpandedbydefault: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('groupsexpandedbydefault', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('groupsexpandedbydefault');\n            }\n        },\n        _handlekeyboardnavigation: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('handlekeyboardnavigation', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('handlekeyboardnavigation');\n            }\n        },\n        _pagerrenderer: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('pagerrenderer', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('pagerrenderer');\n            }\n        },\n        _rtl: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('rtl', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('rtl');\n            }\n        },\n        _showdefaultloadelement: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showdefaultloadelement', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showdefaultloadelement');\n            }\n        },\n        _showfiltercolumnbackground: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showfiltercolumnbackground', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showfiltercolumnbackground');\n            }\n        },\n        _showfiltermenuitems: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showfiltermenuitems', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showfiltermenuitems');\n            }\n        },\n        _showpinnedcolumnbackground: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showpinnedcolumnbackground', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showpinnedcolumnbackground');\n            }\n        },\n        _showsortcolumnbackground: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showsortcolumnbackground', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showsortcolumnbackground');\n            }\n        },\n        _showsortmenuitems: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showsortmenuitems', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showsortmenuitems');\n            }\n        },\n        _showgroupmenuitems: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showgroupmenuitems', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showgroupmenuitems');\n            }\n        },\n        _showrowdetailscolumn: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showrowdetailscolumn', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showrowdetailscolumn');\n            }\n        },\n        _showheader: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showheader', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showheader');\n            }\n        },\n        _showgroupsheader: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showgroupsheader', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showgroupsheader');\n            }\n        },\n        _showaggregates: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showaggregates', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showaggregates');\n            }\n        },\n        _showgroupaggregates: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showgroupaggregates', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showgroupaggregates');\n            }\n        },\n        _showeverpresentrow: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showeverpresentrow', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showeverpresentrow');\n            }\n        },\n        _showfilterrow: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showfilterrow', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showfilterrow');\n            }\n        },\n        _showemptyrow: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showemptyrow', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showemptyrow');\n            }\n        },\n        _showstatusbar: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showstatusbar', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showstatusbar');\n            }\n        },\n        _statusbarheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('statusbarheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('statusbarheight');\n            }\n        },\n        _showtoolbar: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('showtoolbar', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('showtoolbar');\n            }\n        },\n        _selectionmode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('selectionmode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('selectionmode');\n            }\n        },\n        _updatefilterconditions: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('updatefilterconditions', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('updatefilterconditions');\n            }\n        },\n        _updatefilterpanel: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('updatefilterpanel', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('updatefilterpanel');\n            }\n        },\n        _theme: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('theme', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('theme');\n            }\n        },\n        _toolbarheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('toolbarheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('toolbarheight');\n            }\n        },\n        _autoheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('autoheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('autoheight');\n            }\n        },\n        _autorowheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('autorowheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('autorowheight');\n            }\n        },\n        _columnsheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columnsheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columnsheight');\n            }\n        },\n        _deferreddatafields: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('deferreddatafields', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('deferreddatafields');\n            }\n        },\n        _groupsheaderheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('groupsheaderheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('groupsheaderheight');\n            }\n        },\n        _groupindentwidth: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('groupindentwidth', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('groupindentwidth');\n            }\n        },\n        _height: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('height', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('height');\n            }\n        },\n        _pagerheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('pagerheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('pagerheight');\n            }\n        },\n        _rowsheight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('rowsheight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('rowsheight');\n            }\n        },\n        _scrollbarsize: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('scrollbarsize', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('scrollbarsize');\n            }\n        },\n        _scrollmode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('scrollmode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('scrollmode');\n            }\n        },\n        _scrollfeedback: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('scrollfeedback', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('scrollfeedback');\n            }\n        },\n        _width: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('width', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('width');\n            }\n        },\n        _autosavestate: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('autosavestate', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('autosavestate');\n            }\n        },\n        _autoloadstate: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('autoloadstate', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('autoloadstate');\n            }\n        },\n        _columns: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columns', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columns');\n            }\n        },\n        _columngroups: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columngroups', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columngroups');\n            }\n        },\n        _columnsmenu: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columnsmenu', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columnsmenu');\n            }\n        },\n        _columnsresize: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columnsresize', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columnsresize');\n            }\n        },\n        _columnsautoresize: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columnsautoresize', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columnsautoresize');\n            }\n        },\n        _columnsreorder: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('columnsreorder', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('columnsreorder');\n            }\n        },\n        _disabled: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('disabled', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('disabled');\n            }\n        },\n        _editable: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('editable', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('editable');\n            }\n        },\n        _editmode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('editmode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('editmode');\n            }\n        },\n        _filter: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('filter', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('filter');\n            }\n        },\n        _filterable: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('filterable', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('filterable');\n            }\n        },\n        _groupable: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('groupable', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('groupable');\n            }\n        },\n        _groups: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('groups', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('groups');\n            }\n        },\n        _horizontalscrollbarstep: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarstep', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarstep');\n            }\n        },\n        _horizontalscrollbarlargestep: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarlargestep', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarlargestep');\n            }\n        },\n        _initrowdetails: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('initrowdetails', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('initrowdetails');\n            }\n        },\n        _keyboardnavigation: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('keyboardnavigation', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('keyboardnavigation');\n            }\n        },\n        _localization: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('localization', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('localization');\n            }\n        },\n        _pagesize: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('pagesize', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('pagesize');\n            }\n        },\n        _pagesizeoptions: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('pagesizeoptions', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('pagesizeoptions');\n            }\n        },\n        _pagermode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('pagermode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('pagermode');\n            }\n        },\n        _pagerbuttonscount: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('pagerbuttonscount', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('pagerbuttonscount');\n            }\n        },\n        _pageable: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('pageable', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('pageable');\n            }\n        },\n        _rowdetails: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('rowdetails', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('rowdetails');\n            }\n        },\n        _rowdetailstemplate: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('rowdetailstemplate', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('rowdetailstemplate');\n            }\n        },\n        _ready: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('ready', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('ready');\n            }\n        },\n        _rendered: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('rendered', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('rendered');\n            }\n        },\n        _renderstatusbar: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('renderstatusbar', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('renderstatusbar');\n            }\n        },\n        _rendertoolbar: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('rendertoolbar', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('rendertoolbar');\n            }\n        },\n        _rendergridrows: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('rendergridrows', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('rendergridrows');\n            }\n        },\n        _sortable: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('sortable', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('sortable');\n            }\n        },\n        _sortmode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('sortmode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('sortmode');\n            }\n        },\n        _selectedrowindex: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('selectedrowindex', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('selectedrowindex');\n            }\n        },\n        _selectedrowindexes: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('selectedrowindexes', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('selectedrowindexes');\n            }\n        },\n        _source: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('source', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('source');\n            }\n        },\n        _sorttogglestates: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('sorttogglestates', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('sorttogglestates');\n            }\n        },\n        _updatedelay: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('updatedelay', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('updatedelay');\n            }\n        },\n        _virtualmode: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('virtualmode', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('virtualmode');\n            }\n        },\n        _verticalscrollbarstep: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('verticalscrollbarstep', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('verticalscrollbarstep');\n            }\n        },\n        _verticalscrollbarlargestep: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxGrid('verticalscrollbarlargestep', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxGrid('verticalscrollbarlargestep');\n            }\n        },\n        __createComponent__: function (options) {\n            let widgetOptions;\n            options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n            JQXLite(this.componentSelector).jqxGrid(widgetOptions);\n            this.__extendProps__();\n            this.__wireEvents__();\n        },\n        __manageProps__: function () {\n            const widgetProps = ['altrows','altstart','altstep','autoshowloadelement','autoshowfiltericon','autoshowcolumnsmenubutton','showcolumnlines','showrowlines','showcolumnheaderlines','adaptive','adaptivewidth','clipboard','closeablegroups','columnsmenuwidth','columnmenuopening','columnmenuclosing','cellhover','enablekeyboarddelete','enableellipsis','enablemousewheel','enableanimations','enabletooltips','enablehover','enablebrowserselection','everpresentrowposition','everpresentrowheight','everpresentrowactions','everpresentrowactionsmode','filterrowheight','filtermode','groupsrenderer','groupcolumnrenderer','groupsexpandedbydefault','handlekeyboardnavigation','pagerrenderer','rtl','showdefaultloadelement','showfiltercolumnbackground','showfiltermenuitems','showpinnedcolumnbackground','showsortcolumnbackground','showsortmenuitems','showgroupmenuitems','showrowdetailscolumn','showheader','showgroupsheader','showaggregates','showgroupaggregates','showeverpresentrow','showfilterrow','showemptyrow','showstatusbar','statusbarheight','showtoolbar','selectionmode','updatefilterconditions','updatefilterpanel','theme','toolbarheight','autoheight','autorowheight','columnsheight','deferreddatafields','groupsheaderheight','groupindentwidth','height','pagerheight','rowsheight','scrollbarsize','scrollmode','scrollfeedback','width','autosavestate','autoloadstate','columns','columngroups','columnsmenu','columnsresize','columnsautoresize','columnsreorder','disabled','editable','editmode','filter','filterable','groupable','groups','horizontalscrollbarstep','horizontalscrollbarlargestep','initrowdetails','keyboardnavigation','localization','pagesize','pagesizeoptions','pagermode','pagerbuttonscount','pageable','rowdetails','rowdetailstemplate','ready','rendered','renderstatusbar','rendertoolbar','rendergridrows','sortable','sortmode','selectedrowindex','selectedrowindexes','source','sorttogglestates','updatedelay','virtualmode','verticalscrollbarstep','verticalscrollbarlargestep'];\n            const componentProps = this.$options.propsData;\n            let options = {};\n\n            for (let prop in componentProps) {\n                if (widgetProps.indexOf(prop) !== -1) {\n                    options[prop] = componentProps[prop];\n                }\n            }\n            return options;\n        },\n        __extendProps__: function () {\n            const that = this;\n\n            Object.defineProperty(that, 'altrows', {\n                get: function() {\n                    return that._altrows();\n                },\n                set: function(newValue) {\n                    that._altrows(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'altstart', {\n                get: function() {\n                    return that._altstart();\n                },\n                set: function(newValue) {\n                    that._altstart(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'altstep', {\n                get: function() {\n                    return that._altstep();\n                },\n                set: function(newValue) {\n                    that._altstep(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'autoshowloadelement', {\n                get: function() {\n                    return that._autoshowloadelement();\n                },\n                set: function(newValue) {\n                    that._autoshowloadelement(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'autoshowfiltericon', {\n                get: function() {\n                    return that._autoshowfiltericon();\n                },\n                set: function(newValue) {\n                    that._autoshowfiltericon(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'autoshowcolumnsmenubutton', {\n                get: function() {\n                    return that._autoshowcolumnsmenubutton();\n                },\n                set: function(newValue) {\n                    that._autoshowcolumnsmenubutton(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showcolumnlines', {\n                get: function() {\n                    return that._showcolumnlines();\n                },\n                set: function(newValue) {\n                    that._showcolumnlines(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showrowlines', {\n                get: function() {\n                    return that._showrowlines();\n                },\n                set: function(newValue) {\n                    that._showrowlines(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showcolumnheaderlines', {\n                get: function() {\n                    return that._showcolumnheaderlines();\n                },\n                set: function(newValue) {\n                    that._showcolumnheaderlines(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'adaptive', {\n                get: function() {\n                    return that._adaptive();\n                },\n                set: function(newValue) {\n                    that._adaptive(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'adaptivewidth', {\n                get: function() {\n                    return that._adaptivewidth();\n                },\n                set: function(newValue) {\n                    that._adaptivewidth(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'clipboard', {\n                get: function() {\n                    return that._clipboard();\n                },\n                set: function(newValue) {\n                    that._clipboard(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'closeablegroups', {\n                get: function() {\n                    return that._closeablegroups();\n                },\n                set: function(newValue) {\n                    that._closeablegroups(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnsmenuwidth', {\n                get: function() {\n                    return that._columnsmenuwidth();\n                },\n                set: function(newValue) {\n                    that._columnsmenuwidth(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnmenuopening', {\n                get: function() {\n                    return that._columnmenuopening();\n                },\n                set: function(newValue) {\n                    that._columnmenuopening(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnmenuclosing', {\n                get: function() {\n                    return that._columnmenuclosing();\n                },\n                set: function(newValue) {\n                    that._columnmenuclosing(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'cellhover', {\n                get: function() {\n                    return that._cellhover();\n                },\n                set: function(newValue) {\n                    that._cellhover(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enablekeyboarddelete', {\n                get: function() {\n                    return that._enablekeyboarddelete();\n                },\n                set: function(newValue) {\n                    that._enablekeyboarddelete(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enableellipsis', {\n                get: function() {\n                    return that._enableellipsis();\n                },\n                set: function(newValue) {\n                    that._enableellipsis(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enablemousewheel', {\n                get: function() {\n                    return that._enablemousewheel();\n                },\n                set: function(newValue) {\n                    that._enablemousewheel(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enableanimations', {\n                get: function() {\n                    return that._enableanimations();\n                },\n                set: function(newValue) {\n                    that._enableanimations(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enabletooltips', {\n                get: function() {\n                    return that._enabletooltips();\n                },\n                set: function(newValue) {\n                    that._enabletooltips(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enablehover', {\n                get: function() {\n                    return that._enablehover();\n                },\n                set: function(newValue) {\n                    that._enablehover(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enablebrowserselection', {\n                get: function() {\n                    return that._enablebrowserselection();\n                },\n                set: function(newValue) {\n                    that._enablebrowserselection(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'everpresentrowposition', {\n                get: function() {\n                    return that._everpresentrowposition();\n                },\n                set: function(newValue) {\n                    that._everpresentrowposition(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'everpresentrowheight', {\n                get: function() {\n                    return that._everpresentrowheight();\n                },\n                set: function(newValue) {\n                    that._everpresentrowheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'everpresentrowactions', {\n                get: function() {\n                    return that._everpresentrowactions();\n                },\n                set: function(newValue) {\n                    that._everpresentrowactions(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'everpresentrowactionsmode', {\n                get: function() {\n                    return that._everpresentrowactionsmode();\n                },\n                set: function(newValue) {\n                    that._everpresentrowactionsmode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'filterrowheight', {\n                get: function() {\n                    return that._filterrowheight();\n                },\n                set: function(newValue) {\n                    that._filterrowheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'filtermode', {\n                get: function() {\n                    return that._filtermode();\n                },\n                set: function(newValue) {\n                    that._filtermode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'groupsrenderer', {\n                get: function() {\n                    return that._groupsrenderer();\n                },\n                set: function(newValue) {\n                    that._groupsrenderer(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'groupcolumnrenderer', {\n                get: function() {\n                    return that._groupcolumnrenderer();\n                },\n                set: function(newValue) {\n                    that._groupcolumnrenderer(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'groupsexpandedbydefault', {\n                get: function() {\n                    return that._groupsexpandedbydefault();\n                },\n                set: function(newValue) {\n                    that._groupsexpandedbydefault(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'handlekeyboardnavigation', {\n                get: function() {\n                    return that._handlekeyboardnavigation();\n                },\n                set: function(newValue) {\n                    that._handlekeyboardnavigation(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'pagerrenderer', {\n                get: function() {\n                    return that._pagerrenderer();\n                },\n                set: function(newValue) {\n                    that._pagerrenderer(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rtl', {\n                get: function() {\n                    return that._rtl();\n                },\n                set: function(newValue) {\n                    that._rtl(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showdefaultloadelement', {\n                get: function() {\n                    return that._showdefaultloadelement();\n                },\n                set: function(newValue) {\n                    that._showdefaultloadelement(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showfiltercolumnbackground', {\n                get: function() {\n                    return that._showfiltercolumnbackground();\n                },\n                set: function(newValue) {\n                    that._showfiltercolumnbackground(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showfiltermenuitems', {\n                get: function() {\n                    return that._showfiltermenuitems();\n                },\n                set: function(newValue) {\n                    that._showfiltermenuitems(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showpinnedcolumnbackground', {\n                get: function() {\n                    return that._showpinnedcolumnbackground();\n                },\n                set: function(newValue) {\n                    that._showpinnedcolumnbackground(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showsortcolumnbackground', {\n                get: function() {\n                    return that._showsortcolumnbackground();\n                },\n                set: function(newValue) {\n                    that._showsortcolumnbackground(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showsortmenuitems', {\n                get: function() {\n                    return that._showsortmenuitems();\n                },\n                set: function(newValue) {\n                    that._showsortmenuitems(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showgroupmenuitems', {\n                get: function() {\n                    return that._showgroupmenuitems();\n                },\n                set: function(newValue) {\n                    that._showgroupmenuitems(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showrowdetailscolumn', {\n                get: function() {\n                    return that._showrowdetailscolumn();\n                },\n                set: function(newValue) {\n                    that._showrowdetailscolumn(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showheader', {\n                get: function() {\n                    return that._showheader();\n                },\n                set: function(newValue) {\n                    that._showheader(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showgroupsheader', {\n                get: function() {\n                    return that._showgroupsheader();\n                },\n                set: function(newValue) {\n                    that._showgroupsheader(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showaggregates', {\n                get: function() {\n                    return that._showaggregates();\n                },\n                set: function(newValue) {\n                    that._showaggregates(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showgroupaggregates', {\n                get: function() {\n                    return that._showgroupaggregates();\n                },\n                set: function(newValue) {\n                    that._showgroupaggregates(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showeverpresentrow', {\n                get: function() {\n                    return that._showeverpresentrow();\n                },\n                set: function(newValue) {\n                    that._showeverpresentrow(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showfilterrow', {\n                get: function() {\n                    return that._showfilterrow();\n                },\n                set: function(newValue) {\n                    that._showfilterrow(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showemptyrow', {\n                get: function() {\n                    return that._showemptyrow();\n                },\n                set: function(newValue) {\n                    that._showemptyrow(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showstatusbar', {\n                get: function() {\n                    return that._showstatusbar();\n                },\n                set: function(newValue) {\n                    that._showstatusbar(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'statusbarheight', {\n                get: function() {\n                    return that._statusbarheight();\n                },\n                set: function(newValue) {\n                    that._statusbarheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showtoolbar', {\n                get: function() {\n                    return that._showtoolbar();\n                },\n                set: function(newValue) {\n                    that._showtoolbar(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'selectionmode', {\n                get: function() {\n                    return that._selectionmode();\n                },\n                set: function(newValue) {\n                    that._selectionmode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'updatefilterconditions', {\n                get: function() {\n                    return that._updatefilterconditions();\n                },\n                set: function(newValue) {\n                    that._updatefilterconditions(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'updatefilterpanel', {\n                get: function() {\n                    return that._updatefilterpanel();\n                },\n                set: function(newValue) {\n                    that._updatefilterpanel(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'theme', {\n                get: function() {\n                    return that._theme();\n                },\n                set: function(newValue) {\n                    that._theme(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'toolbarheight', {\n                get: function() {\n                    return that._toolbarheight();\n                },\n                set: function(newValue) {\n                    that._toolbarheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'autoheight', {\n                get: function() {\n                    return that._autoheight();\n                },\n                set: function(newValue) {\n                    that._autoheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'autorowheight', {\n                get: function() {\n                    return that._autorowheight();\n                },\n                set: function(newValue) {\n                    that._autorowheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnsheight', {\n                get: function() {\n                    return that._columnsheight();\n                },\n                set: function(newValue) {\n                    that._columnsheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'deferreddatafields', {\n                get: function() {\n                    return that._deferreddatafields();\n                },\n                set: function(newValue) {\n                    that._deferreddatafields(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'groupsheaderheight', {\n                get: function() {\n                    return that._groupsheaderheight();\n                },\n                set: function(newValue) {\n                    that._groupsheaderheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'groupindentwidth', {\n                get: function() {\n                    return that._groupindentwidth();\n                },\n                set: function(newValue) {\n                    that._groupindentwidth(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'height', {\n                get: function() {\n                    return that._height();\n                },\n                set: function(newValue) {\n                    that._height(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'pagerheight', {\n                get: function() {\n                    return that._pagerheight();\n                },\n                set: function(newValue) {\n                    that._pagerheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rowsheight', {\n                get: function() {\n                    return that._rowsheight();\n                },\n                set: function(newValue) {\n                    that._rowsheight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'scrollbarsize', {\n                get: function() {\n                    return that._scrollbarsize();\n                },\n                set: function(newValue) {\n                    that._scrollbarsize(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'scrollmode', {\n                get: function() {\n                    return that._scrollmode();\n                },\n                set: function(newValue) {\n                    that._scrollmode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'scrollfeedback', {\n                get: function() {\n                    return that._scrollfeedback();\n                },\n                set: function(newValue) {\n                    that._scrollfeedback(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'width', {\n                get: function() {\n                    return that._width();\n                },\n                set: function(newValue) {\n                    that._width(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'autosavestate', {\n                get: function() {\n                    return that._autosavestate();\n                },\n                set: function(newValue) {\n                    that._autosavestate(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'autoloadstate', {\n                get: function() {\n                    return that._autoloadstate();\n                },\n                set: function(newValue) {\n                    that._autoloadstate(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columns', {\n                get: function() {\n                    return that._columns();\n                },\n                set: function(newValue) {\n                    that._columns(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columngroups', {\n                get: function() {\n                    return that._columngroups();\n                },\n                set: function(newValue) {\n                    that._columngroups(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnsmenu', {\n                get: function() {\n                    return that._columnsmenu();\n                },\n                set: function(newValue) {\n                    that._columnsmenu(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnsresize', {\n                get: function() {\n                    return that._columnsresize();\n                },\n                set: function(newValue) {\n                    that._columnsresize(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnsautoresize', {\n                get: function() {\n                    return that._columnsautoresize();\n                },\n                set: function(newValue) {\n                    that._columnsautoresize(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnsreorder', {\n                get: function() {\n                    return that._columnsreorder();\n                },\n                set: function(newValue) {\n                    that._columnsreorder(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'disabled', {\n                get: function() {\n                    return that._disabled();\n                },\n                set: function(newValue) {\n                    that._disabled(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editable', {\n                get: function() {\n                    return that._editable();\n                },\n                set: function(newValue) {\n                    that._editable(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editmode', {\n                get: function() {\n                    return that._editmode();\n                },\n                set: function(newValue) {\n                    that._editmode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'filter', {\n                get: function() {\n                    return that._filter();\n                },\n                set: function(newValue) {\n                    that._filter(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'filterable', {\n                get: function() {\n                    return that._filterable();\n                },\n                set: function(newValue) {\n                    that._filterable(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'groupable', {\n                get: function() {\n                    return that._groupable();\n                },\n                set: function(newValue) {\n                    that._groupable(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'groups', {\n                get: function() {\n                    return that._groups();\n                },\n                set: function(newValue) {\n                    that._groups(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'horizontalscrollbarstep', {\n                get: function() {\n                    return that._horizontalscrollbarstep();\n                },\n                set: function(newValue) {\n                    that._horizontalscrollbarstep(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'horizontalscrollbarlargestep', {\n                get: function() {\n                    return that._horizontalscrollbarlargestep();\n                },\n                set: function(newValue) {\n                    that._horizontalscrollbarlargestep(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'initrowdetails', {\n                get: function() {\n                    return that._initrowdetails();\n                },\n                set: function(newValue) {\n                    that._initrowdetails(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'keyboardnavigation', {\n                get: function() {\n                    return that._keyboardnavigation();\n                },\n                set: function(newValue) {\n                    that._keyboardnavigation(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'localization', {\n                get: function() {\n                    return that._localization();\n                },\n                set: function(newValue) {\n                    that._localization(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'pagesize', {\n                get: function() {\n                    return that._pagesize();\n                },\n                set: function(newValue) {\n                    that._pagesize(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'pagesizeoptions', {\n                get: function() {\n                    return that._pagesizeoptions();\n                },\n                set: function(newValue) {\n                    that._pagesizeoptions(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'pagermode', {\n                get: function() {\n                    return that._pagermode();\n                },\n                set: function(newValue) {\n                    that._pagermode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'pagerbuttonscount', {\n                get: function() {\n                    return that._pagerbuttonscount();\n                },\n                set: function(newValue) {\n                    that._pagerbuttonscount(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'pageable', {\n                get: function() {\n                    return that._pageable();\n                },\n                set: function(newValue) {\n                    that._pageable(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rowdetails', {\n                get: function() {\n                    return that._rowdetails();\n                },\n                set: function(newValue) {\n                    that._rowdetails(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rowdetailstemplate', {\n                get: function() {\n                    return that._rowdetailstemplate();\n                },\n                set: function(newValue) {\n                    that._rowdetailstemplate(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'ready', {\n                get: function() {\n                    return that._ready();\n                },\n                set: function(newValue) {\n                    that._ready(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rendered', {\n                get: function() {\n                    return that._rendered();\n                },\n                set: function(newValue) {\n                    that._rendered(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'renderstatusbar', {\n                get: function() {\n                    return that._renderstatusbar();\n                },\n                set: function(newValue) {\n                    that._renderstatusbar(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rendertoolbar', {\n                get: function() {\n                    return that._rendertoolbar();\n                },\n                set: function(newValue) {\n                    that._rendertoolbar(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rendergridrows', {\n                get: function() {\n                    return that._rendergridrows();\n                },\n                set: function(newValue) {\n                    that._rendergridrows(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'sortable', {\n                get: function() {\n                    return that._sortable();\n                },\n                set: function(newValue) {\n                    that._sortable(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'sortmode', {\n                get: function() {\n                    return that._sortmode();\n                },\n                set: function(newValue) {\n                    that._sortmode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'selectedrowindex', {\n                get: function() {\n                    return that._selectedrowindex();\n                },\n                set: function(newValue) {\n                    that._selectedrowindex(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'selectedrowindexes', {\n                get: function() {\n                    return that._selectedrowindexes();\n                },\n                set: function(newValue) {\n                    that._selectedrowindexes(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'source', {\n                get: function() {\n                    return that._source();\n                },\n                set: function(newValue) {\n                    that._source(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'sorttogglestates', {\n                get: function() {\n                    return that._sorttogglestates();\n                },\n                set: function(newValue) {\n                    that._sorttogglestates(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'updatedelay', {\n                get: function() {\n                    return that._updatedelay();\n                },\n                set: function(newValue) {\n                    that._updatedelay(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'virtualmode', {\n                get: function() {\n                    return that._virtualmode();\n                },\n                set: function(newValue) {\n                    that._virtualmode(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'verticalscrollbarstep', {\n                get: function() {\n                    return that._verticalscrollbarstep();\n                },\n                set: function(newValue) {\n                    that._verticalscrollbarstep(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'verticalscrollbarlargestep', {\n                get: function() {\n                    return that._verticalscrollbarlargestep();\n                },\n                set: function(newValue) {\n                    that._verticalscrollbarlargestep(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n        },\n        __wireEvents__: function () {\n            const that = this;\n\n            JQXLite(this.componentSelector).on('bindingcomplete', function (event) { that.$emit('bindingcomplete', event); });\n            JQXLite(this.componentSelector).on('columnresized', function (event) { that.$emit('columnresized', event); });\n            JQXLite(this.componentSelector).on('columnreordered', function (event) { that.$emit('columnreordered', event); });\n            JQXLite(this.componentSelector).on('columnclick', function (event) { that.$emit('columnclick', event); });\n            JQXLite(this.componentSelector).on('cellclick', function (event) { that.$emit('cellclick', event); });\n            JQXLite(this.componentSelector).on('celldoubleclick', function (event) { that.$emit('celldoubleclick', event); });\n            JQXLite(this.componentSelector).on('cellselect', function (event) { that.$emit('cellselect', event); });\n            JQXLite(this.componentSelector).on('cellunselect', function (event) { that.$emit('cellunselect', event); });\n            JQXLite(this.componentSelector).on('cellvaluechanged', function (event) { that.$emit('cellvaluechanged', event); });\n            JQXLite(this.componentSelector).on('cellbeginedit', function (event) { that.$emit('cellbeginedit', event); });\n            JQXLite(this.componentSelector).on('cellendedit', function (event) { that.$emit('cellendedit', event); });\n            JQXLite(this.componentSelector).on('filter', function (event) { that.$emit('filter', event); });\n            JQXLite(this.componentSelector).on('groupschanged', function (event) { that.$emit('groupschanged', event); });\n            JQXLite(this.componentSelector).on('groupexpand', function (event) { that.$emit('groupexpand', event); });\n            JQXLite(this.componentSelector).on('groupcollapse', function (event) { that.$emit('groupcollapse', event); });\n            JQXLite(this.componentSelector).on('pagechanged', function (event) { that.$emit('pagechanged', event); });\n            JQXLite(this.componentSelector).on('pagesizechanged', function (event) { that.$emit('pagesizechanged', event); });\n            JQXLite(this.componentSelector).on('rowclick', function (event) { that.$emit('rowclick', event); });\n            JQXLite(this.componentSelector).on('rowdoubleclick', function (event) { that.$emit('rowdoubleclick', event); });\n            JQXLite(this.componentSelector).on('rowselect', function (event) { that.$emit('rowselect', event); });\n            JQXLite(this.componentSelector).on('rowunselect', function (event) { that.$emit('rowunselect', event); });\n            JQXLite(this.componentSelector).on('rowexpand', function (event) { that.$emit('rowexpand', event); });\n            JQXLite(this.componentSelector).on('rowcollapse', function (event) { that.$emit('rowcollapse', event); });\n            JQXLite(this.componentSelector).on('sort', function (event) { that.$emit('sort', event); });\n        }\n    }\n}\n",{"version":3,"sources":["vue_jqxgrid.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vue_jqxgrid.vue","sourceRoot":"node_modules/jqwidgets-scripts/jqwidgets-vue","sourcesContent":["<template>\n    <div v-bind:id=\"id\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import '../jqwidgets/jqxcore.js';\n    import '../jqwidgets/jqxdata.js';\n    import '../jqwidgets/jqxdata.export.js';\n    import '../jqwidgets/jqxbuttons.js';\n    import '../jqwidgets/jqxbuttongroup.js';\n    import '../jqwidgets/jqxscrollbar.js'\n    import '../jqwidgets/jqxmenu.js'\n    import '../jqwidgets/jqxlistbox.js'\n    import '../jqwidgets/jqxdropdownlist.js'\n    import '../jqwidgets/jqxcombobox.js'\n    import '../jqwidgets/jqxnumberinput.js'\n    import '../jqwidgets/jqxcheckbox.js'\n    import '../jqwidgets/globalization/globalize.js'\n    import '../jqwidgets/jqxcalendar.js'\n    import '../jqwidgets/jqxnumberinput.js'\n    import '../jqwidgets/jqxdatetimeinput.js'\n    import '../jqwidgets/jqxgrid.js'\n    import '../jqwidgets/jqxgrid.edit.js'\n    import '../jqwidgets/jqxgrid.pager.js'\n    import '../jqwidgets/jqxgrid.selection.js'\n    import '../jqwidgets/jqxgrid.filter.js'\n    import '../jqwidgets/jqxgrid.sort.js'\n    import '../jqwidgets/jqxgrid.storage.js'\n    import '../jqwidgets/jqxgrid.grouping.js'\n    import '../jqwidgets/jqxgrid.export.js'\n    import '../jqwidgets/jqxgrid.columnsresize.js'\n    import '../jqwidgets/jqxgrid.columnsreorder.js'\n    import '../jqwidgets/jqxgrid.aggregates.js'\n\n    export default {\n        props: {\n            altrows: Boolean,\n            altstart: Number,\n            altstep: Number,\n            autoshowloadelement: Boolean,\n            autoshowfiltericon: Boolean,\n            autoshowcolumnsmenubutton: Boolean,\n            showcolumnlines: Boolean,\n            showrowlines: Boolean,\n            showcolumnheaderlines: Boolean,\n            adaptive: Boolean,\n            adaptivewidth: Number,\n            clipboard: Boolean,\n            closeablegroups: Boolean,\n            columnsmenuwidth: Number,\n            columnmenuopening: Function,\n            columnmenuclosing: Function,\n            cellhover: Function,\n            enablekeyboarddelete: Boolean,\n            enableellipsis: Boolean,\n            enablemousewheel: Boolean,\n            enableanimations: Boolean,\n            enabletooltips: Boolean,\n            enablehover: Boolean,\n            enablebrowserselection: Boolean,\n            everpresentrowposition: String,\n            everpresentrowheight: Number,\n            everpresentrowactions: String,\n            everpresentrowactionsmode: String,\n            filterrowheight: Number,\n            filtermode: String,\n            groupsrenderer: Function,\n            groupcolumnrenderer: Function,\n            groupsexpandedbydefault: Boolean,\n            handlekeyboardnavigation: Function,\n            pagerrenderer: Function,\n            rtl: Boolean,\n            showdefaultloadelement: Boolean,\n            showfiltercolumnbackground: Boolean,\n            showfiltermenuitems: Boolean,\n            showpinnedcolumnbackground: Boolean,\n            showsortcolumnbackground: Boolean,\n            showsortmenuitems: Boolean,\n            showgroupmenuitems: Boolean,\n            showrowdetailscolumn: Boolean,\n            showheader: Boolean,\n            showgroupsheader: Boolean,\n            showaggregates: Boolean,\n            showgroupaggregates: Boolean,\n            showeverpresentrow: Boolean,\n            showfilterrow: Boolean,\n            showemptyrow: Boolean,\n            showstatusbar: Boolean,\n            statusbarheight: Number,\n            showtoolbar: Boolean,\n            selectionmode: String,\n            updatefilterconditions: Function,\n            updatefilterpanel: Function,\n            theme: String,\n            toolbarheight: Number,\n            autoheight: Boolean,\n            autorowheight: Boolean,\n            columnsheight: Number,\n            deferreddatafields: Array,\n            groupsheaderheight: Number,\n            groupindentwidth: Number,\n            height: [String, Number],\n            pagerheight: Number,\n            rowsheight: Number,\n            scrollbarsize: Number,\n            scrollmode: String,\n            scrollfeedback: Function,\n            width: [String, Number],\n            autosavestate: Boolean,\n            autoloadstate: Boolean,\n            columns: Array,\n            columngroups: Array,\n            columnsmenu: Boolean,\n            columnsresize: Boolean,\n            columnsautoresize: Boolean,\n            columnsreorder: Boolean,\n            disabled: Boolean,\n            editable: Boolean,\n            editmode: String,\n            filter: Function,\n            filterable: Boolean,\n            groupable: Boolean,\n            groups: Array,\n            horizontalscrollbarstep: Number,\n            horizontalscrollbarlargestep: Number,\n            initrowdetails: Function,\n            keyboardnavigation: Boolean,\n            localization: Object,\n            pagesize: Number,\n            pagesizeoptions: Array,\n            pagermode: String,\n            pagerbuttonscount: Number,\n            pageable: Boolean,\n            rowdetails: Boolean,\n            rowdetailstemplate: Object,\n            ready: Function,\n            rendered: Function,\n            renderstatusbar: Function,\n            rendertoolbar: Function,\n            rendergridrows: Function,\n            sortable: Boolean,\n            sortmode: String,\n            selectedrowindex: Number,\n            selectedrowindexes: Array,\n            source: Object,\n            sorttogglestates: Number,\n            updatedelay: Number,\n            virtualmode: Boolean,\n            verticalscrollbarstep: Number,\n            verticalscrollbarlargestep: Number,\n            autoCreate: {\n                default: true,\n                type: Boolean\n            }\n        },\n        created: function () {\n            this.id = 'jqxGrid' + JQXLite.generateID();\n            this.componentSelector = '#' + this.id;\n        },\n        mounted: function () {\n            if (this.autoCreate) this.__createComponent__();\n        },\n        methods: {\n            createComponent: function (options) {\n                if (!this.autoCreate) this.__createComponent__(options)\n                else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n            },\n            setOptions: function (options) {\n                JQXLite(this.componentSelector).jqxGrid(options);\n            },\n            getOptions: function () {\n                const usedProps = Object.keys(this.__manageProps__());\n                const resultToReturn = {};\n                for (let i = 0; i < usedProps.length; i++) {\n                    resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxGrid(usedProps[i]);\n                }\n                return resultToReturn;\n            },\n            autoresizecolumns: function(type) {\n                JQXLite(this.componentSelector).jqxGrid('autoresizecolumns', type);  \n            },\n            autoresizecolumn: function(dataField, type) {\n                JQXLite(this.componentSelector).jqxGrid('autoresizecolumn', dataField, type);  \n            },\n            beginupdate: function() {\n                JQXLite(this.componentSelector).jqxGrid('beginupdate');  \n            },\n            clear: function() {\n                JQXLite(this.componentSelector).jqxGrid('clear');  \n            },\n            destroy: function() {\n                JQXLite(this.componentSelector).jqxGrid('destroy');  \n            },\n            endupdate: function() {\n                JQXLite(this.componentSelector).jqxGrid('endupdate');  \n            },\n            ensurerowvisible: function(rowBoundIndex) {\n                JQXLite(this.componentSelector).jqxGrid('ensurerowvisible', rowBoundIndex);  \n            },\n            focus: function() {\n                JQXLite(this.componentSelector).jqxGrid('focus');  \n            },\n            getcolumnindex: function(dataField) {\n                return JQXLite(this.componentSelector).jqxGrid('getcolumnindex', dataField);  \n            },\n            getcolumn: function(dataField) {\n                return JQXLite(this.componentSelector).jqxGrid('getcolumn', dataField);  \n            },\n            getcolumnproperty: function(dataField, propertyName) {\n                return JQXLite(this.componentSelector).jqxGrid('getcolumnproperty', dataField, propertyName);  \n            },\n            getrowid: function(rowBoundIndex) {\n                return JQXLite(this.componentSelector).jqxGrid('getrowid', rowBoundIndex);  \n            },\n            getrowdata: function(rowBoundIndex) {\n                return JQXLite(this.componentSelector).jqxGrid('getrowdata', rowBoundIndex);  \n            },\n            getrowdatabyid: function(rowID) {\n                return JQXLite(this.componentSelector).jqxGrid('getrowdatabyid', rowID);  \n            },\n            getrowboundindexbyid: function(rowID) {\n                return JQXLite(this.componentSelector).jqxGrid('getrowboundindexbyid', rowID);  \n            },\n            getrowboundindex: function(rowDisplayIndex) {\n                return JQXLite(this.componentSelector).jqxGrid('getrowboundindex', rowDisplayIndex);  \n            },\n            getrows: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getrows');  \n            },\n            getboundrows: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getboundrows');  \n            },\n            getdisplayrows: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getdisplayrows');  \n            },\n            getdatainformation: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getdatainformation');  \n            },\n            getsortinformation: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getsortinformation');  \n            },\n            getpaginginformation: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getpaginginformation');  \n            },\n            hidecolumn: function(dataField) {\n                JQXLite(this.componentSelector).jqxGrid('hidecolumn', dataField);  \n            },\n            hideloadelement: function() {\n                JQXLite(this.componentSelector).jqxGrid('hideloadelement');  \n            },\n            hiderowdetails: function(rowBoundIndex) {\n                JQXLite(this.componentSelector).jqxGrid('hiderowdetails', rowBoundIndex);  \n            },\n            iscolumnvisible: function(dataField) {\n                return JQXLite(this.componentSelector).jqxGrid('iscolumnvisible', dataField);  \n            },\n            iscolumnpinned: function(dataField) {\n                return JQXLite(this.componentSelector).jqxGrid('iscolumnpinned', dataField);  \n            },\n            localizestrings: function(localizationobject) {\n                JQXLite(this.componentSelector).jqxGrid('localizestrings', localizationobject);  \n            },\n            pincolumn: function(dataField) {\n                JQXLite(this.componentSelector).jqxGrid('pincolumn', dataField);  \n            },\n            refreshdata: function() {\n                JQXLite(this.componentSelector).jqxGrid('refreshdata');  \n            },\n            refresh: function() {\n                JQXLite(this.componentSelector).jqxGrid('refresh');  \n            },\n            render: function() {\n                JQXLite(this.componentSelector).jqxGrid('render');  \n            },\n            scrolloffset: function(top, left) {\n                JQXLite(this.componentSelector).jqxGrid('scrolloffset', top, left);  \n            },\n            scrollposition: function() {\n                return JQXLite(this.componentSelector).jqxGrid('scrollposition');  \n            },\n            showloadelement: function() {\n                JQXLite(this.componentSelector).jqxGrid('showloadelement');  \n            },\n            showrowdetails: function(rowBoundIndex) {\n                JQXLite(this.componentSelector).jqxGrid('showrowdetails', rowBoundIndex);  \n            },\n            setcolumnindex: function(dataField, index) {\n                JQXLite(this.componentSelector).jqxGrid('setcolumnindex', dataField, index);  \n            },\n            setcolumnproperty: function(dataField, propertyName, propertyValue) {\n                JQXLite(this.componentSelector).jqxGrid('setcolumnproperty', dataField, propertyName, propertyValue);  \n            },\n            showcolumn: function(dataField) {\n                JQXLite(this.componentSelector).jqxGrid('showcolumn', dataField);  \n            },\n            unpincolumn: function(dataField) {\n                JQXLite(this.componentSelector).jqxGrid('unpincolumn', dataField);  \n            },\n            updatebounddata: function(type) {\n                JQXLite(this.componentSelector).jqxGrid('updatebounddata', type);  \n            },\n            updating: function() {\n                return JQXLite(this.componentSelector).jqxGrid('updating');  \n            },\n            getsortcolumn: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getsortcolumn');  \n            },\n            removesort: function() {\n                JQXLite(this.componentSelector).jqxGrid('removesort');  \n            },\n            sortby: function(dataField, sortOrder) {\n                JQXLite(this.componentSelector).jqxGrid('sortby', dataField, sortOrder);  \n            },\n            addgroup: function(dataField) {\n                JQXLite(this.componentSelector).jqxGrid('addgroup', dataField);  \n            },\n            cleargroups: function() {\n                JQXLite(this.componentSelector).jqxGrid('cleargroups');  \n            },\n            collapsegroup: function(group) {\n                JQXLite(this.componentSelector).jqxGrid('collapsegroup', group);  \n            },\n            collapseallgroups: function() {\n                JQXLite(this.componentSelector).jqxGrid('collapseallgroups');  \n            },\n            expandallgroups: function() {\n                JQXLite(this.componentSelector).jqxGrid('expandallgroups');  \n            },\n            expandgroup: function(group) {\n                JQXLite(this.componentSelector).jqxGrid('expandgroup', group);  \n            },\n            getrootgroupscount: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getrootgroupscount');  \n            },\n            getgroup: function(groupIndex) {\n                return JQXLite(this.componentSelector).jqxGrid('getgroup', groupIndex);  \n            },\n            insertgroup: function(groupIndex, dataField) {\n                JQXLite(this.componentSelector).jqxGrid('insertgroup', groupIndex, dataField);  \n            },\n            iscolumngroupable: function() {\n                return JQXLite(this.componentSelector).jqxGrid('iscolumngroupable');  \n            },\n            removegroupat: function(groupIndex) {\n                JQXLite(this.componentSelector).jqxGrid('removegroupat', groupIndex);  \n            },\n            removegroup: function(dataField) {\n                JQXLite(this.componentSelector).jqxGrid('removegroup', dataField);  \n            },\n            addfilter: function(dataField, filterGroup, refreshGrid) {\n                JQXLite(this.componentSelector).jqxGrid('addfilter', dataField, filterGroup, refreshGrid);  \n            },\n            applyfilters: function() {\n                JQXLite(this.componentSelector).jqxGrid('applyfilters');  \n            },\n            clearfilters: function() {\n                JQXLite(this.componentSelector).jqxGrid('clearfilters');  \n            },\n            getfilterinformation: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getfilterinformation');  \n            },\n            getcolumnat: function(index) {\n                return JQXLite(this.componentSelector).jqxGrid('getcolumnat', index);  \n            },\n            removefilter: function(dataField, refreshGrid) {\n                JQXLite(this.componentSelector).jqxGrid('removefilter', dataField, refreshGrid);  \n            },\n            refreshfilterrow: function() {\n                JQXLite(this.componentSelector).jqxGrid('refreshfilterrow');  \n            },\n            gotopage: function(pagenumber) {\n                JQXLite(this.componentSelector).jqxGrid('gotopage', pagenumber);  \n            },\n            gotoprevpage: function() {\n                JQXLite(this.componentSelector).jqxGrid('gotoprevpage');  \n            },\n            gotonextpage: function() {\n                JQXLite(this.componentSelector).jqxGrid('gotonextpage');  \n            },\n            addrow: function(rowIds, data, rowPosition) {\n                JQXLite(this.componentSelector).jqxGrid('addrow', rowIds, data, rowPosition);  \n            },\n            begincelledit: function(rowBoundIndex, dataField) {\n                JQXLite(this.componentSelector).jqxGrid('begincelledit', rowBoundIndex, dataField);  \n            },\n            beginrowedit: function(rowBoundIndex) {\n                JQXLite(this.componentSelector).jqxGrid('beginrowedit', rowBoundIndex);  \n            },\n            closemenu: function() {\n                JQXLite(this.componentSelector).jqxGrid('closemenu');  \n            },\n            deleterow: function(rowIds) {\n                JQXLite(this.componentSelector).jqxGrid('deleterow', rowIds);  \n            },\n            endcelledit: function(rowBoundIndex, dataField, confirmChanges) {\n                JQXLite(this.componentSelector).jqxGrid('endcelledit', rowBoundIndex, dataField, confirmChanges);  \n            },\n            endrowedit: function(rowBoundIndex, confirmChanges) {\n                JQXLite(this.componentSelector).jqxGrid('endrowedit', rowBoundIndex, confirmChanges);  \n            },\n            getcell: function(rowBoundIndex, datafield) {\n                return JQXLite(this.componentSelector).jqxGrid('getcell', rowBoundIndex, datafield);  \n            },\n            getcellatposition: function(left, top) {\n                return JQXLite(this.componentSelector).jqxGrid('getcellatposition', left, top);  \n            },\n            getcelltext: function(rowBoundIndex, dataField) {\n                return JQXLite(this.componentSelector).jqxGrid('getcelltext', rowBoundIndex, dataField);  \n            },\n            getcelltextbyid: function(rowID, dataField) {\n                return JQXLite(this.componentSelector).jqxGrid('getcelltextbyid', rowID, dataField);  \n            },\n            getcellvaluebyid: function(rowID, dataField) {\n                return JQXLite(this.componentSelector).jqxGrid('getcellvaluebyid', rowID, dataField);  \n            },\n            getcellvalue: function(rowBoundIndex, dataField) {\n                return JQXLite(this.componentSelector).jqxGrid('getcellvalue', rowBoundIndex, dataField);  \n            },\n            isBindingCompleted: function() {\n                return JQXLite(this.componentSelector).jqxGrid('isBindingCompleted');  \n            },\n            openmenu: function(dataField) {\n                JQXLite(this.componentSelector).jqxGrid('openmenu', dataField);  \n            },\n            setcellvalue: function(rowBoundIndex, dataField, value) {\n                JQXLite(this.componentSelector).jqxGrid('setcellvalue', rowBoundIndex, dataField, value);  \n            },\n            setcellvaluebyid: function(rowID, dataField, value) {\n                JQXLite(this.componentSelector).jqxGrid('setcellvaluebyid', rowID, dataField, value);  \n            },\n            showvalidationpopup: function(rowBoundIndex, dataField, validationMessage) {\n                JQXLite(this.componentSelector).jqxGrid('showvalidationpopup', rowBoundIndex, dataField, validationMessage);  \n            },\n            updaterow: function(rowIds, data) {\n                JQXLite(this.componentSelector).jqxGrid('updaterow', rowIds, data);  \n            },\n            clearselection: function() {\n                JQXLite(this.componentSelector).jqxGrid('clearselection');  \n            },\n            getselectedrowindex: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getselectedrowindex');  \n            },\n            getselectedrowindexes: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getselectedrowindexes');  \n            },\n            getselectedcell: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getselectedcell');  \n            },\n            getselectedcells: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getselectedcells');  \n            },\n            selectcell: function(rowBoundIndex, dataField) {\n                JQXLite(this.componentSelector).jqxGrid('selectcell', rowBoundIndex, dataField);  \n            },\n            selectallrows: function() {\n                JQXLite(this.componentSelector).jqxGrid('selectallrows');  \n            },\n            selectrow: function(rowBoundIndex) {\n                JQXLite(this.componentSelector).jqxGrid('selectrow', rowBoundIndex);  \n            },\n            unselectrow: function(rowBoundIndex) {\n                JQXLite(this.componentSelector).jqxGrid('unselectrow', rowBoundIndex);  \n            },\n            unselectcell: function(rowBoundIndex, dataField) {\n                JQXLite(this.componentSelector).jqxGrid('unselectcell', rowBoundIndex, dataField);  \n            },\n            getcolumnaggregateddata: function(dataField, aggregates) {\n                return JQXLite(this.componentSelector).jqxGrid('getcolumnaggregateddata', dataField, aggregates);  \n            },\n            refreshaggregates: function() {\n                JQXLite(this.componentSelector).jqxGrid('refreshaggregates');  \n            },\n            renderaggregates: function() {\n                JQXLite(this.componentSelector).jqxGrid('renderaggregates');  \n            },\n            exportdata: function(dataType, fileName, exportHeader, rows, exportHiddenColumns, serverURL, charSet) {\n                return JQXLite(this.componentSelector).jqxGrid('exportdata', dataType, fileName, exportHeader, rows, exportHiddenColumns, serverURL, charSet);  \n            },\n            getstate: function() {\n                return JQXLite(this.componentSelector).jqxGrid('getstate');  \n            },\n            loadstate: function(stateobject) {\n                JQXLite(this.componentSelector).jqxGrid('loadstate', stateobject);  \n            },\n            savestate: function() {\n                return JQXLite(this.componentSelector).jqxGrid('savestate');  \n            },\n            _altrows: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('altrows', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('altrows');\n                }\n            },\n            _altstart: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('altstart', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('altstart');\n                }\n            },\n            _altstep: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('altstep', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('altstep');\n                }\n            },\n            _autoshowloadelement: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('autoshowloadelement', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('autoshowloadelement');\n                }\n            },\n            _autoshowfiltericon: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('autoshowfiltericon', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('autoshowfiltericon');\n                }\n            },\n            _autoshowcolumnsmenubutton: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('autoshowcolumnsmenubutton', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('autoshowcolumnsmenubutton');\n                }\n            },\n            _showcolumnlines: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showcolumnlines', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showcolumnlines');\n                }\n            },\n            _showrowlines: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showrowlines', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showrowlines');\n                }\n            },\n            _showcolumnheaderlines: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showcolumnheaderlines', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showcolumnheaderlines');\n                }\n            },\n            _adaptive: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('adaptive', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('adaptive');\n                }\n            },\n            _adaptivewidth: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('adaptivewidth', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('adaptivewidth');\n                }\n            },\n            _clipboard: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('clipboard', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('clipboard');\n                }\n            },\n            _closeablegroups: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('closeablegroups', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('closeablegroups');\n                }\n            },\n            _columnsmenuwidth: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columnsmenuwidth', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columnsmenuwidth');\n                }\n            },\n            _columnmenuopening: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columnmenuopening', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columnmenuopening');\n                }\n            },\n            _columnmenuclosing: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columnmenuclosing', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columnmenuclosing');\n                }\n            },\n            _cellhover: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('cellhover', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('cellhover');\n                }\n            },\n            _enablekeyboarddelete: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('enablekeyboarddelete', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('enablekeyboarddelete');\n                }\n            },\n            _enableellipsis: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('enableellipsis', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('enableellipsis');\n                }\n            },\n            _enablemousewheel: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('enablemousewheel', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('enablemousewheel');\n                }\n            },\n            _enableanimations: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('enableanimations', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('enableanimations');\n                }\n            },\n            _enabletooltips: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('enabletooltips', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('enabletooltips');\n                }\n            },\n            _enablehover: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('enablehover', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('enablehover');\n                }\n            },\n            _enablebrowserselection: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('enablebrowserselection', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('enablebrowserselection');\n                }\n            },\n            _everpresentrowposition: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('everpresentrowposition', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('everpresentrowposition');\n                }\n            },\n            _everpresentrowheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('everpresentrowheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('everpresentrowheight');\n                }\n            },\n            _everpresentrowactions: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('everpresentrowactions', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('everpresentrowactions');\n                }\n            },\n            _everpresentrowactionsmode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('everpresentrowactionsmode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('everpresentrowactionsmode');\n                }\n            },\n            _filterrowheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('filterrowheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('filterrowheight');\n                }\n            },\n            _filtermode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('filtermode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('filtermode');\n                }\n            },\n            _groupsrenderer: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('groupsrenderer', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('groupsrenderer');\n                }\n            },\n            _groupcolumnrenderer: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('groupcolumnrenderer', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('groupcolumnrenderer');\n                }\n            },\n            _groupsexpandedbydefault: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('groupsexpandedbydefault', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('groupsexpandedbydefault');\n                }\n            },\n            _handlekeyboardnavigation: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('handlekeyboardnavigation', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('handlekeyboardnavigation');\n                }\n            },\n            _pagerrenderer: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('pagerrenderer', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('pagerrenderer');\n                }\n            },\n            _rtl: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('rtl', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('rtl');\n                }\n            },\n            _showdefaultloadelement: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showdefaultloadelement', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showdefaultloadelement');\n                }\n            },\n            _showfiltercolumnbackground: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showfiltercolumnbackground', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showfiltercolumnbackground');\n                }\n            },\n            _showfiltermenuitems: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showfiltermenuitems', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showfiltermenuitems');\n                }\n            },\n            _showpinnedcolumnbackground: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showpinnedcolumnbackground', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showpinnedcolumnbackground');\n                }\n            },\n            _showsortcolumnbackground: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showsortcolumnbackground', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showsortcolumnbackground');\n                }\n            },\n            _showsortmenuitems: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showsortmenuitems', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showsortmenuitems');\n                }\n            },\n            _showgroupmenuitems: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showgroupmenuitems', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showgroupmenuitems');\n                }\n            },\n            _showrowdetailscolumn: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showrowdetailscolumn', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showrowdetailscolumn');\n                }\n            },\n            _showheader: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showheader', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showheader');\n                }\n            },\n            _showgroupsheader: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showgroupsheader', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showgroupsheader');\n                }\n            },\n            _showaggregates: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showaggregates', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showaggregates');\n                }\n            },\n            _showgroupaggregates: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showgroupaggregates', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showgroupaggregates');\n                }\n            },\n            _showeverpresentrow: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showeverpresentrow', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showeverpresentrow');\n                }\n            },\n            _showfilterrow: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showfilterrow', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showfilterrow');\n                }\n            },\n            _showemptyrow: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showemptyrow', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showemptyrow');\n                }\n            },\n            _showstatusbar: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showstatusbar', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showstatusbar');\n                }\n            },\n            _statusbarheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('statusbarheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('statusbarheight');\n                }\n            },\n            _showtoolbar: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('showtoolbar', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('showtoolbar');\n                }\n            },\n            _selectionmode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('selectionmode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('selectionmode');\n                }\n            },\n            _updatefilterconditions: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('updatefilterconditions', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('updatefilterconditions');\n                }\n            },\n            _updatefilterpanel: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('updatefilterpanel', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('updatefilterpanel');\n                }\n            },\n            _theme: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('theme', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('theme');\n                }\n            },\n            _toolbarheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('toolbarheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('toolbarheight');\n                }\n            },\n            _autoheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('autoheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('autoheight');\n                }\n            },\n            _autorowheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('autorowheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('autorowheight');\n                }\n            },\n            _columnsheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columnsheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columnsheight');\n                }\n            },\n            _deferreddatafields: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('deferreddatafields', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('deferreddatafields');\n                }\n            },\n            _groupsheaderheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('groupsheaderheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('groupsheaderheight');\n                }\n            },\n            _groupindentwidth: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('groupindentwidth', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('groupindentwidth');\n                }\n            },\n            _height: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('height', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('height');\n                }\n            },\n            _pagerheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('pagerheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('pagerheight');\n                }\n            },\n            _rowsheight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('rowsheight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('rowsheight');\n                }\n            },\n            _scrollbarsize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('scrollbarsize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('scrollbarsize');\n                }\n            },\n            _scrollmode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('scrollmode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('scrollmode');\n                }\n            },\n            _scrollfeedback: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('scrollfeedback', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('scrollfeedback');\n                }\n            },\n            _width: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('width', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('width');\n                }\n            },\n            _autosavestate: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('autosavestate', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('autosavestate');\n                }\n            },\n            _autoloadstate: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('autoloadstate', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('autoloadstate');\n                }\n            },\n            _columns: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columns', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columns');\n                }\n            },\n            _columngroups: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columngroups', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columngroups');\n                }\n            },\n            _columnsmenu: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columnsmenu', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columnsmenu');\n                }\n            },\n            _columnsresize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columnsresize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columnsresize');\n                }\n            },\n            _columnsautoresize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columnsautoresize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columnsautoresize');\n                }\n            },\n            _columnsreorder: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('columnsreorder', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('columnsreorder');\n                }\n            },\n            _disabled: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('disabled', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('disabled');\n                }\n            },\n            _editable: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('editable', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('editable');\n                }\n            },\n            _editmode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('editmode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('editmode');\n                }\n            },\n            _filter: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('filter', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('filter');\n                }\n            },\n            _filterable: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('filterable', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('filterable');\n                }\n            },\n            _groupable: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('groupable', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('groupable');\n                }\n            },\n            _groups: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('groups', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('groups');\n                }\n            },\n            _horizontalscrollbarstep: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarstep', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarstep');\n                }\n            },\n            _horizontalscrollbarlargestep: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarlargestep', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('horizontalscrollbarlargestep');\n                }\n            },\n            _initrowdetails: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('initrowdetails', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('initrowdetails');\n                }\n            },\n            _keyboardnavigation: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('keyboardnavigation', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('keyboardnavigation');\n                }\n            },\n            _localization: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('localization', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('localization');\n                }\n            },\n            _pagesize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('pagesize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('pagesize');\n                }\n            },\n            _pagesizeoptions: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('pagesizeoptions', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('pagesizeoptions');\n                }\n            },\n            _pagermode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('pagermode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('pagermode');\n                }\n            },\n            _pagerbuttonscount: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('pagerbuttonscount', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('pagerbuttonscount');\n                }\n            },\n            _pageable: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('pageable', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('pageable');\n                }\n            },\n            _rowdetails: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('rowdetails', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('rowdetails');\n                }\n            },\n            _rowdetailstemplate: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('rowdetailstemplate', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('rowdetailstemplate');\n                }\n            },\n            _ready: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('ready', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('ready');\n                }\n            },\n            _rendered: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('rendered', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('rendered');\n                }\n            },\n            _renderstatusbar: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('renderstatusbar', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('renderstatusbar');\n                }\n            },\n            _rendertoolbar: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('rendertoolbar', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('rendertoolbar');\n                }\n            },\n            _rendergridrows: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('rendergridrows', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('rendergridrows');\n                }\n            },\n            _sortable: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('sortable', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('sortable');\n                }\n            },\n            _sortmode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('sortmode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('sortmode');\n                }\n            },\n            _selectedrowindex: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('selectedrowindex', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('selectedrowindex');\n                }\n            },\n            _selectedrowindexes: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('selectedrowindexes', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('selectedrowindexes');\n                }\n            },\n            _source: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('source', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('source');\n                }\n            },\n            _sorttogglestates: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('sorttogglestates', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('sorttogglestates');\n                }\n            },\n            _updatedelay: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('updatedelay', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('updatedelay');\n                }\n            },\n            _virtualmode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('virtualmode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('virtualmode');\n                }\n            },\n            _verticalscrollbarstep: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('verticalscrollbarstep', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('verticalscrollbarstep');\n                }\n            },\n            _verticalscrollbarlargestep: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxGrid('verticalscrollbarlargestep', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxGrid('verticalscrollbarlargestep');\n                }\n            },\n            __createComponent__: function (options) {\n                let widgetOptions;\n                options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n                JQXLite(this.componentSelector).jqxGrid(widgetOptions);\n                this.__extendProps__();\n                this.__wireEvents__();\n            },\n            __manageProps__: function () {\n                const widgetProps = ['altrows','altstart','altstep','autoshowloadelement','autoshowfiltericon','autoshowcolumnsmenubutton','showcolumnlines','showrowlines','showcolumnheaderlines','adaptive','adaptivewidth','clipboard','closeablegroups','columnsmenuwidth','columnmenuopening','columnmenuclosing','cellhover','enablekeyboarddelete','enableellipsis','enablemousewheel','enableanimations','enabletooltips','enablehover','enablebrowserselection','everpresentrowposition','everpresentrowheight','everpresentrowactions','everpresentrowactionsmode','filterrowheight','filtermode','groupsrenderer','groupcolumnrenderer','groupsexpandedbydefault','handlekeyboardnavigation','pagerrenderer','rtl','showdefaultloadelement','showfiltercolumnbackground','showfiltermenuitems','showpinnedcolumnbackground','showsortcolumnbackground','showsortmenuitems','showgroupmenuitems','showrowdetailscolumn','showheader','showgroupsheader','showaggregates','showgroupaggregates','showeverpresentrow','showfilterrow','showemptyrow','showstatusbar','statusbarheight','showtoolbar','selectionmode','updatefilterconditions','updatefilterpanel','theme','toolbarheight','autoheight','autorowheight','columnsheight','deferreddatafields','groupsheaderheight','groupindentwidth','height','pagerheight','rowsheight','scrollbarsize','scrollmode','scrollfeedback','width','autosavestate','autoloadstate','columns','columngroups','columnsmenu','columnsresize','columnsautoresize','columnsreorder','disabled','editable','editmode','filter','filterable','groupable','groups','horizontalscrollbarstep','horizontalscrollbarlargestep','initrowdetails','keyboardnavigation','localization','pagesize','pagesizeoptions','pagermode','pagerbuttonscount','pageable','rowdetails','rowdetailstemplate','ready','rendered','renderstatusbar','rendertoolbar','rendergridrows','sortable','sortmode','selectedrowindex','selectedrowindexes','source','sorttogglestates','updatedelay','virtualmode','verticalscrollbarstep','verticalscrollbarlargestep'];\n                const componentProps = this.$options.propsData;\n                let options = {};\n\n                for (let prop in componentProps) {\n                    if (widgetProps.indexOf(prop) !== -1) {\n                        options[prop] = componentProps[prop];\n                    }\n                }\n                return options;\n            },\n            __extendProps__: function () {\n                const that = this;\n\n                Object.defineProperty(that, 'altrows', {\n                    get: function() {\n                        return that._altrows();\n                    },\n                    set: function(newValue) {\n                        that._altrows(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'altstart', {\n                    get: function() {\n                        return that._altstart();\n                    },\n                    set: function(newValue) {\n                        that._altstart(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'altstep', {\n                    get: function() {\n                        return that._altstep();\n                    },\n                    set: function(newValue) {\n                        that._altstep(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'autoshowloadelement', {\n                    get: function() {\n                        return that._autoshowloadelement();\n                    },\n                    set: function(newValue) {\n                        that._autoshowloadelement(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'autoshowfiltericon', {\n                    get: function() {\n                        return that._autoshowfiltericon();\n                    },\n                    set: function(newValue) {\n                        that._autoshowfiltericon(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'autoshowcolumnsmenubutton', {\n                    get: function() {\n                        return that._autoshowcolumnsmenubutton();\n                    },\n                    set: function(newValue) {\n                        that._autoshowcolumnsmenubutton(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showcolumnlines', {\n                    get: function() {\n                        return that._showcolumnlines();\n                    },\n                    set: function(newValue) {\n                        that._showcolumnlines(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showrowlines', {\n                    get: function() {\n                        return that._showrowlines();\n                    },\n                    set: function(newValue) {\n                        that._showrowlines(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showcolumnheaderlines', {\n                    get: function() {\n                        return that._showcolumnheaderlines();\n                    },\n                    set: function(newValue) {\n                        that._showcolumnheaderlines(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'adaptive', {\n                    get: function() {\n                        return that._adaptive();\n                    },\n                    set: function(newValue) {\n                        that._adaptive(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'adaptivewidth', {\n                    get: function() {\n                        return that._adaptivewidth();\n                    },\n                    set: function(newValue) {\n                        that._adaptivewidth(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'clipboard', {\n                    get: function() {\n                        return that._clipboard();\n                    },\n                    set: function(newValue) {\n                        that._clipboard(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'closeablegroups', {\n                    get: function() {\n                        return that._closeablegroups();\n                    },\n                    set: function(newValue) {\n                        that._closeablegroups(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnsmenuwidth', {\n                    get: function() {\n                        return that._columnsmenuwidth();\n                    },\n                    set: function(newValue) {\n                        that._columnsmenuwidth(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnmenuopening', {\n                    get: function() {\n                        return that._columnmenuopening();\n                    },\n                    set: function(newValue) {\n                        that._columnmenuopening(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnmenuclosing', {\n                    get: function() {\n                        return that._columnmenuclosing();\n                    },\n                    set: function(newValue) {\n                        that._columnmenuclosing(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'cellhover', {\n                    get: function() {\n                        return that._cellhover();\n                    },\n                    set: function(newValue) {\n                        that._cellhover(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enablekeyboarddelete', {\n                    get: function() {\n                        return that._enablekeyboarddelete();\n                    },\n                    set: function(newValue) {\n                        that._enablekeyboarddelete(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enableellipsis', {\n                    get: function() {\n                        return that._enableellipsis();\n                    },\n                    set: function(newValue) {\n                        that._enableellipsis(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enablemousewheel', {\n                    get: function() {\n                        return that._enablemousewheel();\n                    },\n                    set: function(newValue) {\n                        that._enablemousewheel(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enableanimations', {\n                    get: function() {\n                        return that._enableanimations();\n                    },\n                    set: function(newValue) {\n                        that._enableanimations(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enabletooltips', {\n                    get: function() {\n                        return that._enabletooltips();\n                    },\n                    set: function(newValue) {\n                        that._enabletooltips(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enablehover', {\n                    get: function() {\n                        return that._enablehover();\n                    },\n                    set: function(newValue) {\n                        that._enablehover(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enablebrowserselection', {\n                    get: function() {\n                        return that._enablebrowserselection();\n                    },\n                    set: function(newValue) {\n                        that._enablebrowserselection(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'everpresentrowposition', {\n                    get: function() {\n                        return that._everpresentrowposition();\n                    },\n                    set: function(newValue) {\n                        that._everpresentrowposition(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'everpresentrowheight', {\n                    get: function() {\n                        return that._everpresentrowheight();\n                    },\n                    set: function(newValue) {\n                        that._everpresentrowheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'everpresentrowactions', {\n                    get: function() {\n                        return that._everpresentrowactions();\n                    },\n                    set: function(newValue) {\n                        that._everpresentrowactions(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'everpresentrowactionsmode', {\n                    get: function() {\n                        return that._everpresentrowactionsmode();\n                    },\n                    set: function(newValue) {\n                        that._everpresentrowactionsmode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'filterrowheight', {\n                    get: function() {\n                        return that._filterrowheight();\n                    },\n                    set: function(newValue) {\n                        that._filterrowheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'filtermode', {\n                    get: function() {\n                        return that._filtermode();\n                    },\n                    set: function(newValue) {\n                        that._filtermode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'groupsrenderer', {\n                    get: function() {\n                        return that._groupsrenderer();\n                    },\n                    set: function(newValue) {\n                        that._groupsrenderer(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'groupcolumnrenderer', {\n                    get: function() {\n                        return that._groupcolumnrenderer();\n                    },\n                    set: function(newValue) {\n                        that._groupcolumnrenderer(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'groupsexpandedbydefault', {\n                    get: function() {\n                        return that._groupsexpandedbydefault();\n                    },\n                    set: function(newValue) {\n                        that._groupsexpandedbydefault(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'handlekeyboardnavigation', {\n                    get: function() {\n                        return that._handlekeyboardnavigation();\n                    },\n                    set: function(newValue) {\n                        that._handlekeyboardnavigation(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'pagerrenderer', {\n                    get: function() {\n                        return that._pagerrenderer();\n                    },\n                    set: function(newValue) {\n                        that._pagerrenderer(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rtl', {\n                    get: function() {\n                        return that._rtl();\n                    },\n                    set: function(newValue) {\n                        that._rtl(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showdefaultloadelement', {\n                    get: function() {\n                        return that._showdefaultloadelement();\n                    },\n                    set: function(newValue) {\n                        that._showdefaultloadelement(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showfiltercolumnbackground', {\n                    get: function() {\n                        return that._showfiltercolumnbackground();\n                    },\n                    set: function(newValue) {\n                        that._showfiltercolumnbackground(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showfiltermenuitems', {\n                    get: function() {\n                        return that._showfiltermenuitems();\n                    },\n                    set: function(newValue) {\n                        that._showfiltermenuitems(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showpinnedcolumnbackground', {\n                    get: function() {\n                        return that._showpinnedcolumnbackground();\n                    },\n                    set: function(newValue) {\n                        that._showpinnedcolumnbackground(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showsortcolumnbackground', {\n                    get: function() {\n                        return that._showsortcolumnbackground();\n                    },\n                    set: function(newValue) {\n                        that._showsortcolumnbackground(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showsortmenuitems', {\n                    get: function() {\n                        return that._showsortmenuitems();\n                    },\n                    set: function(newValue) {\n                        that._showsortmenuitems(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showgroupmenuitems', {\n                    get: function() {\n                        return that._showgroupmenuitems();\n                    },\n                    set: function(newValue) {\n                        that._showgroupmenuitems(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showrowdetailscolumn', {\n                    get: function() {\n                        return that._showrowdetailscolumn();\n                    },\n                    set: function(newValue) {\n                        that._showrowdetailscolumn(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showheader', {\n                    get: function() {\n                        return that._showheader();\n                    },\n                    set: function(newValue) {\n                        that._showheader(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showgroupsheader', {\n                    get: function() {\n                        return that._showgroupsheader();\n                    },\n                    set: function(newValue) {\n                        that._showgroupsheader(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showaggregates', {\n                    get: function() {\n                        return that._showaggregates();\n                    },\n                    set: function(newValue) {\n                        that._showaggregates(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showgroupaggregates', {\n                    get: function() {\n                        return that._showgroupaggregates();\n                    },\n                    set: function(newValue) {\n                        that._showgroupaggregates(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showeverpresentrow', {\n                    get: function() {\n                        return that._showeverpresentrow();\n                    },\n                    set: function(newValue) {\n                        that._showeverpresentrow(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showfilterrow', {\n                    get: function() {\n                        return that._showfilterrow();\n                    },\n                    set: function(newValue) {\n                        that._showfilterrow(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showemptyrow', {\n                    get: function() {\n                        return that._showemptyrow();\n                    },\n                    set: function(newValue) {\n                        that._showemptyrow(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showstatusbar', {\n                    get: function() {\n                        return that._showstatusbar();\n                    },\n                    set: function(newValue) {\n                        that._showstatusbar(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'statusbarheight', {\n                    get: function() {\n                        return that._statusbarheight();\n                    },\n                    set: function(newValue) {\n                        that._statusbarheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showtoolbar', {\n                    get: function() {\n                        return that._showtoolbar();\n                    },\n                    set: function(newValue) {\n                        that._showtoolbar(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'selectionmode', {\n                    get: function() {\n                        return that._selectionmode();\n                    },\n                    set: function(newValue) {\n                        that._selectionmode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'updatefilterconditions', {\n                    get: function() {\n                        return that._updatefilterconditions();\n                    },\n                    set: function(newValue) {\n                        that._updatefilterconditions(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'updatefilterpanel', {\n                    get: function() {\n                        return that._updatefilterpanel();\n                    },\n                    set: function(newValue) {\n                        that._updatefilterpanel(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'theme', {\n                    get: function() {\n                        return that._theme();\n                    },\n                    set: function(newValue) {\n                        that._theme(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'toolbarheight', {\n                    get: function() {\n                        return that._toolbarheight();\n                    },\n                    set: function(newValue) {\n                        that._toolbarheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'autoheight', {\n                    get: function() {\n                        return that._autoheight();\n                    },\n                    set: function(newValue) {\n                        that._autoheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'autorowheight', {\n                    get: function() {\n                        return that._autorowheight();\n                    },\n                    set: function(newValue) {\n                        that._autorowheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnsheight', {\n                    get: function() {\n                        return that._columnsheight();\n                    },\n                    set: function(newValue) {\n                        that._columnsheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'deferreddatafields', {\n                    get: function() {\n                        return that._deferreddatafields();\n                    },\n                    set: function(newValue) {\n                        that._deferreddatafields(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'groupsheaderheight', {\n                    get: function() {\n                        return that._groupsheaderheight();\n                    },\n                    set: function(newValue) {\n                        that._groupsheaderheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'groupindentwidth', {\n                    get: function() {\n                        return that._groupindentwidth();\n                    },\n                    set: function(newValue) {\n                        that._groupindentwidth(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'height', {\n                    get: function() {\n                        return that._height();\n                    },\n                    set: function(newValue) {\n                        that._height(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'pagerheight', {\n                    get: function() {\n                        return that._pagerheight();\n                    },\n                    set: function(newValue) {\n                        that._pagerheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rowsheight', {\n                    get: function() {\n                        return that._rowsheight();\n                    },\n                    set: function(newValue) {\n                        that._rowsheight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'scrollbarsize', {\n                    get: function() {\n                        return that._scrollbarsize();\n                    },\n                    set: function(newValue) {\n                        that._scrollbarsize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'scrollmode', {\n                    get: function() {\n                        return that._scrollmode();\n                    },\n                    set: function(newValue) {\n                        that._scrollmode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'scrollfeedback', {\n                    get: function() {\n                        return that._scrollfeedback();\n                    },\n                    set: function(newValue) {\n                        that._scrollfeedback(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'width', {\n                    get: function() {\n                        return that._width();\n                    },\n                    set: function(newValue) {\n                        that._width(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'autosavestate', {\n                    get: function() {\n                        return that._autosavestate();\n                    },\n                    set: function(newValue) {\n                        that._autosavestate(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'autoloadstate', {\n                    get: function() {\n                        return that._autoloadstate();\n                    },\n                    set: function(newValue) {\n                        that._autoloadstate(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columns', {\n                    get: function() {\n                        return that._columns();\n                    },\n                    set: function(newValue) {\n                        that._columns(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columngroups', {\n                    get: function() {\n                        return that._columngroups();\n                    },\n                    set: function(newValue) {\n                        that._columngroups(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnsmenu', {\n                    get: function() {\n                        return that._columnsmenu();\n                    },\n                    set: function(newValue) {\n                        that._columnsmenu(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnsresize', {\n                    get: function() {\n                        return that._columnsresize();\n                    },\n                    set: function(newValue) {\n                        that._columnsresize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnsautoresize', {\n                    get: function() {\n                        return that._columnsautoresize();\n                    },\n                    set: function(newValue) {\n                        that._columnsautoresize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnsreorder', {\n                    get: function() {\n                        return that._columnsreorder();\n                    },\n                    set: function(newValue) {\n                        that._columnsreorder(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'disabled', {\n                    get: function() {\n                        return that._disabled();\n                    },\n                    set: function(newValue) {\n                        that._disabled(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editable', {\n                    get: function() {\n                        return that._editable();\n                    },\n                    set: function(newValue) {\n                        that._editable(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editmode', {\n                    get: function() {\n                        return that._editmode();\n                    },\n                    set: function(newValue) {\n                        that._editmode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'filter', {\n                    get: function() {\n                        return that._filter();\n                    },\n                    set: function(newValue) {\n                        that._filter(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'filterable', {\n                    get: function() {\n                        return that._filterable();\n                    },\n                    set: function(newValue) {\n                        that._filterable(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'groupable', {\n                    get: function() {\n                        return that._groupable();\n                    },\n                    set: function(newValue) {\n                        that._groupable(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'groups', {\n                    get: function() {\n                        return that._groups();\n                    },\n                    set: function(newValue) {\n                        that._groups(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'horizontalscrollbarstep', {\n                    get: function() {\n                        return that._horizontalscrollbarstep();\n                    },\n                    set: function(newValue) {\n                        that._horizontalscrollbarstep(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'horizontalscrollbarlargestep', {\n                    get: function() {\n                        return that._horizontalscrollbarlargestep();\n                    },\n                    set: function(newValue) {\n                        that._horizontalscrollbarlargestep(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'initrowdetails', {\n                    get: function() {\n                        return that._initrowdetails();\n                    },\n                    set: function(newValue) {\n                        that._initrowdetails(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'keyboardnavigation', {\n                    get: function() {\n                        return that._keyboardnavigation();\n                    },\n                    set: function(newValue) {\n                        that._keyboardnavigation(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'localization', {\n                    get: function() {\n                        return that._localization();\n                    },\n                    set: function(newValue) {\n                        that._localization(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'pagesize', {\n                    get: function() {\n                        return that._pagesize();\n                    },\n                    set: function(newValue) {\n                        that._pagesize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'pagesizeoptions', {\n                    get: function() {\n                        return that._pagesizeoptions();\n                    },\n                    set: function(newValue) {\n                        that._pagesizeoptions(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'pagermode', {\n                    get: function() {\n                        return that._pagermode();\n                    },\n                    set: function(newValue) {\n                        that._pagermode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'pagerbuttonscount', {\n                    get: function() {\n                        return that._pagerbuttonscount();\n                    },\n                    set: function(newValue) {\n                        that._pagerbuttonscount(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'pageable', {\n                    get: function() {\n                        return that._pageable();\n                    },\n                    set: function(newValue) {\n                        that._pageable(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rowdetails', {\n                    get: function() {\n                        return that._rowdetails();\n                    },\n                    set: function(newValue) {\n                        that._rowdetails(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rowdetailstemplate', {\n                    get: function() {\n                        return that._rowdetailstemplate();\n                    },\n                    set: function(newValue) {\n                        that._rowdetailstemplate(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'ready', {\n                    get: function() {\n                        return that._ready();\n                    },\n                    set: function(newValue) {\n                        that._ready(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rendered', {\n                    get: function() {\n                        return that._rendered();\n                    },\n                    set: function(newValue) {\n                        that._rendered(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'renderstatusbar', {\n                    get: function() {\n                        return that._renderstatusbar();\n                    },\n                    set: function(newValue) {\n                        that._renderstatusbar(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rendertoolbar', {\n                    get: function() {\n                        return that._rendertoolbar();\n                    },\n                    set: function(newValue) {\n                        that._rendertoolbar(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rendergridrows', {\n                    get: function() {\n                        return that._rendergridrows();\n                    },\n                    set: function(newValue) {\n                        that._rendergridrows(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'sortable', {\n                    get: function() {\n                        return that._sortable();\n                    },\n                    set: function(newValue) {\n                        that._sortable(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'sortmode', {\n                    get: function() {\n                        return that._sortmode();\n                    },\n                    set: function(newValue) {\n                        that._sortmode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'selectedrowindex', {\n                    get: function() {\n                        return that._selectedrowindex();\n                    },\n                    set: function(newValue) {\n                        that._selectedrowindex(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'selectedrowindexes', {\n                    get: function() {\n                        return that._selectedrowindexes();\n                    },\n                    set: function(newValue) {\n                        that._selectedrowindexes(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'source', {\n                    get: function() {\n                        return that._source();\n                    },\n                    set: function(newValue) {\n                        that._source(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'sorttogglestates', {\n                    get: function() {\n                        return that._sorttogglestates();\n                    },\n                    set: function(newValue) {\n                        that._sorttogglestates(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'updatedelay', {\n                    get: function() {\n                        return that._updatedelay();\n                    },\n                    set: function(newValue) {\n                        that._updatedelay(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'virtualmode', {\n                    get: function() {\n                        return that._virtualmode();\n                    },\n                    set: function(newValue) {\n                        that._virtualmode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'verticalscrollbarstep', {\n                    get: function() {\n                        return that._verticalscrollbarstep();\n                    },\n                    set: function(newValue) {\n                        that._verticalscrollbarstep(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'verticalscrollbarlargestep', {\n                    get: function() {\n                        return that._verticalscrollbarlargestep();\n                    },\n                    set: function(newValue) {\n                        that._verticalscrollbarlargestep(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            },\n            __wireEvents__: function () {\n                const that = this;\n\n                JQXLite(this.componentSelector).on('bindingcomplete', function (event) { that.$emit('bindingcomplete', event); });\n                JQXLite(this.componentSelector).on('columnresized', function (event) { that.$emit('columnresized', event); });\n                JQXLite(this.componentSelector).on('columnreordered', function (event) { that.$emit('columnreordered', event); });\n                JQXLite(this.componentSelector).on('columnclick', function (event) { that.$emit('columnclick', event); });\n                JQXLite(this.componentSelector).on('cellclick', function (event) { that.$emit('cellclick', event); });\n                JQXLite(this.componentSelector).on('celldoubleclick', function (event) { that.$emit('celldoubleclick', event); });\n                JQXLite(this.componentSelector).on('cellselect', function (event) { that.$emit('cellselect', event); });\n                JQXLite(this.componentSelector).on('cellunselect', function (event) { that.$emit('cellunselect', event); });\n                JQXLite(this.componentSelector).on('cellvaluechanged', function (event) { that.$emit('cellvaluechanged', event); });\n                JQXLite(this.componentSelector).on('cellbeginedit', function (event) { that.$emit('cellbeginedit', event); });\n                JQXLite(this.componentSelector).on('cellendedit', function (event) { that.$emit('cellendedit', event); });\n                JQXLite(this.componentSelector).on('filter', function (event) { that.$emit('filter', event); });\n                JQXLite(this.componentSelector).on('groupschanged', function (event) { that.$emit('groupschanged', event); });\n                JQXLite(this.componentSelector).on('groupexpand', function (event) { that.$emit('groupexpand', event); });\n                JQXLite(this.componentSelector).on('groupcollapse', function (event) { that.$emit('groupcollapse', event); });\n                JQXLite(this.componentSelector).on('pagechanged', function (event) { that.$emit('pagechanged', event); });\n                JQXLite(this.componentSelector).on('pagesizechanged', function (event) { that.$emit('pagesizechanged', event); });\n                JQXLite(this.componentSelector).on('rowclick', function (event) { that.$emit('rowclick', event); });\n                JQXLite(this.componentSelector).on('rowdoubleclick', function (event) { that.$emit('rowdoubleclick', event); });\n                JQXLite(this.componentSelector).on('rowselect', function (event) { that.$emit('rowselect', event); });\n                JQXLite(this.componentSelector).on('rowunselect', function (event) { that.$emit('rowunselect', event); });\n                JQXLite(this.componentSelector).on('rowexpand', function (event) { that.$emit('rowexpand', event); });\n                JQXLite(this.componentSelector).on('rowcollapse', function (event) { that.$emit('rowcollapse', event); });\n                JQXLite(this.componentSelector).on('sort', function (event) { that.$emit('sort', event); });\n            }\n        }\n    }\n</script>\n"]}]}