{"remainingRequest":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxpanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxpanel.vue","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nimport \"../jqwidgets/jqxcore.js\";\nimport \"../jqwidgets/jqxbuttons.js\";\nimport \"../jqwidgets/jqxscrollbar.js\";\nimport \"../jqwidgets/jqxpanel.js\";\nexport default {\n  props: {\n    autoUpdate: Boolean,\n    disabled: Boolean,\n    height: [Number, String],\n    rtl: Boolean,\n    sizeMode: String,\n    scrollBarSize: Number,\n    theme: String,\n    width: [Number, String],\n    autoCreate: {\n      default: true,\n      type: Boolean\n    }\n  },\n  created: function created() {\n    this.id = 'jqxPanel' + JQXLite.generateID();\n    this.componentSelector = '#' + this.id;\n  },\n  mounted: function mounted() {\n    if (this.autoCreate) this.__createComponent__();\n  },\n  methods: {\n    createComponent: function createComponent(options) {\n      if (!this.autoCreate) this.__createComponent__(options);else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n    },\n    setOptions: function setOptions(options) {\n      JQXLite(this.componentSelector).jqxPanel(options);\n    },\n    getOptions: function getOptions() {\n      var usedProps = Object.keys(this.__manageProps__());\n      var resultToReturn = {};\n\n      for (var i = 0; i < usedProps.length; i++) {\n        resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxPanel(usedProps[i]);\n      }\n\n      return resultToReturn;\n    },\n    append: function append(HTMLElement) {\n      JQXLite(this.componentSelector).jqxPanel('append', HTMLElement);\n    },\n    clearcontent: function clearcontent() {\n      JQXLite(this.componentSelector).jqxPanel('clearcontent');\n    },\n    destroy: function destroy() {\n      JQXLite(this.componentSelector).jqxPanel('destroy');\n    },\n    focus: function focus() {\n      JQXLite(this.componentSelector).jqxPanel('focus');\n    },\n    getScrollHeight: function getScrollHeight() {\n      return JQXLite(this.componentSelector).jqxPanel('getScrollHeight');\n    },\n    getVScrollPosition: function getVScrollPosition() {\n      return JQXLite(this.componentSelector).jqxPanel('getVScrollPosition');\n    },\n    getScrollWidth: function getScrollWidth() {\n      return JQXLite(this.componentSelector).jqxPanel('getScrollWidth');\n    },\n    getHScrollPosition: function getHScrollPosition() {\n      return JQXLite(this.componentSelector).jqxPanel('getHScrollPosition');\n    },\n    prepend: function prepend(HTMLElement) {\n      JQXLite(this.componentSelector).jqxPanel('prepend', HTMLElement);\n    },\n    remove: function remove(HTMLElement) {\n      JQXLite(this.componentSelector).jqxPanel('remove', HTMLElement);\n    },\n    scrollTo: function scrollTo(left, top) {\n      JQXLite(this.componentSelector).jqxPanel('scrollTo', left, top);\n    },\n    _autoUpdate: function _autoUpdate(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxPanel('autoUpdate', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxPanel('autoUpdate');\n      }\n    },\n    _disabled: function _disabled(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxPanel('disabled', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxPanel('disabled');\n      }\n    },\n    _height: function _height(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxPanel('height', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxPanel('height');\n      }\n    },\n    _rtl: function _rtl(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxPanel('rtl', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxPanel('rtl');\n      }\n    },\n    _sizeMode: function _sizeMode(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxPanel('sizeMode', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxPanel('sizeMode');\n      }\n    },\n    _scrollBarSize: function _scrollBarSize(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxPanel('scrollBarSize', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxPanel('scrollBarSize');\n      }\n    },\n    _theme: function _theme(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxPanel('theme', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxPanel('theme');\n      }\n    },\n    _width: function _width(arg) {\n      if (arg !== undefined) {\n        JQXLite(this.componentSelector).jqxPanel('width', arg);\n      } else {\n        return JQXLite(this.componentSelector).jqxPanel('width');\n      }\n    },\n    __createComponent__: function __createComponent__(options) {\n      var widgetOptions;\n      options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n      JQXLite(this.componentSelector).jqxPanel(widgetOptions);\n\n      this.__extendProps__();\n\n      this.__wireEvents__();\n    },\n    __manageProps__: function __manageProps__() {\n      var widgetProps = ['autoUpdate', 'disabled', 'height', 'rtl', 'sizeMode', 'scrollBarSize', 'theme', 'width'];\n      var componentProps = this.$options.propsData;\n      var options = {};\n\n      for (var prop in componentProps) {\n        if (widgetProps.indexOf(prop) !== -1) {\n          options[prop] = componentProps[prop];\n        }\n      }\n\n      return options;\n    },\n    __extendProps__: function __extendProps__() {\n      var that = this;\n      Object.defineProperty(that, 'autoUpdate', {\n        get: function get() {\n          return that._autoUpdate();\n        },\n        set: function set(newValue) {\n          that._autoUpdate(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'disabled', {\n        get: function get() {\n          return that._disabled();\n        },\n        set: function set(newValue) {\n          that._disabled(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'height', {\n        get: function get() {\n          return that._height();\n        },\n        set: function set(newValue) {\n          that._height(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'rtl', {\n        get: function get() {\n          return that._rtl();\n        },\n        set: function set(newValue) {\n          that._rtl(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'sizeMode', {\n        get: function get() {\n          return that._sizeMode();\n        },\n        set: function set(newValue) {\n          that._sizeMode(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'scrollBarSize', {\n        get: function get() {\n          return that._scrollBarSize();\n        },\n        set: function set(newValue) {\n          that._scrollBarSize(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'theme', {\n        get: function get() {\n          return that._theme();\n        },\n        set: function set(newValue) {\n          that._theme(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(that, 'width', {\n        get: function get() {\n          return that._width();\n        },\n        set: function set(newValue) {\n          that._width(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n    },\n    __wireEvents__: function __wireEvents__() {\n      var that = this;\n    }\n  }\n};",{"version":3,"sources":["vue_jqxpanel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div v-bind:id=\"id\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import '../jqwidgets/jqxcore.js';\n    import '../jqwidgets/jqxbuttons.js';\n    import '../jqwidgets/jqxscrollbar.js';\n    import '../jqwidgets/jqxpanel.js';\n\n    export default {\n        props: {\n            autoUpdate: Boolean,\n            disabled: Boolean,\n            height: [Number, String],\n            rtl: Boolean,\n            sizeMode: String,\n            scrollBarSize: Number,\n            theme: String,\n            width: [Number, String],\n            autoCreate: {\n                default: true,\n                type: Boolean\n            }\n        },\n        created: function () {\n            this.id = 'jqxPanel' + JQXLite.generateID();\n            this.componentSelector = '#' + this.id;\n        },\n        mounted: function () {\n            if (this.autoCreate) this.__createComponent__();\n        },\n        methods: {\n            createComponent: function (options) {\n                if (!this.autoCreate) this.__createComponent__(options)\n                else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n            },\n            setOptions: function (options) {\n                JQXLite(this.componentSelector).jqxPanel(options);\n            },\n            getOptions: function () {\n                const usedProps = Object.keys(this.__manageProps__());\n                const resultToReturn = {};\n                for (let i = 0; i < usedProps.length; i++) {\n                    resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxPanel(usedProps[i]);\n                }\n                return resultToReturn;\n            },\n            append: function(HTMLElement) {\n                JQXLite(this.componentSelector).jqxPanel('append', HTMLElement);  \n            },\n            clearcontent: function() {\n                JQXLite(this.componentSelector).jqxPanel('clearcontent');  \n            },\n            destroy: function() {\n                JQXLite(this.componentSelector).jqxPanel('destroy');  \n            },\n            focus: function() {\n                JQXLite(this.componentSelector).jqxPanel('focus');  \n            },\n            getScrollHeight: function() {\n                return JQXLite(this.componentSelector).jqxPanel('getScrollHeight');  \n            },\n            getVScrollPosition: function() {\n                return JQXLite(this.componentSelector).jqxPanel('getVScrollPosition');  \n            },\n            getScrollWidth: function() {\n                return JQXLite(this.componentSelector).jqxPanel('getScrollWidth');  \n            },\n            getHScrollPosition: function() {\n                return JQXLite(this.componentSelector).jqxPanel('getHScrollPosition');  \n            },\n            prepend: function(HTMLElement) {\n                JQXLite(this.componentSelector).jqxPanel('prepend', HTMLElement);  \n            },\n            remove: function(HTMLElement) {\n                JQXLite(this.componentSelector).jqxPanel('remove', HTMLElement);  \n            },\n            scrollTo: function(left, top) {\n                JQXLite(this.componentSelector).jqxPanel('scrollTo', left, top);  \n            },\n            _autoUpdate: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxPanel('autoUpdate', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxPanel('autoUpdate');\n                }\n            },\n            _disabled: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxPanel('disabled', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxPanel('disabled');\n                }\n            },\n            _height: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxPanel('height', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxPanel('height');\n                }\n            },\n            _rtl: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxPanel('rtl', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxPanel('rtl');\n                }\n            },\n            _sizeMode: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxPanel('sizeMode', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxPanel('sizeMode');\n                }\n            },\n            _scrollBarSize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxPanel('scrollBarSize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxPanel('scrollBarSize');\n                }\n            },\n            _theme: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxPanel('theme', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxPanel('theme');\n                }\n            },\n            _width: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxPanel('width', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxPanel('width');\n                }\n            },\n            __createComponent__: function (options) {\n                let widgetOptions;\n                options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n                JQXLite(this.componentSelector).jqxPanel(widgetOptions);\n                this.__extendProps__();\n                this.__wireEvents__();\n            },\n            __manageProps__: function () {\n                const widgetProps = ['autoUpdate','disabled','height','rtl','sizeMode','scrollBarSize','theme','width'];\n                const componentProps = this.$options.propsData;\n                let options = {};\n\n                for (let prop in componentProps) {\n                    if (widgetProps.indexOf(prop) !== -1) {\n                        options[prop] = componentProps[prop];\n                    }\n                }\n                return options;\n            },\n            __extendProps__: function () {\n                const that = this;\n\n                Object.defineProperty(that, 'autoUpdate', {\n                    get: function() {\n                        return that._autoUpdate();\n                    },\n                    set: function(newValue) {\n                        that._autoUpdate(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'disabled', {\n                    get: function() {\n                        return that._disabled();\n                    },\n                    set: function(newValue) {\n                        that._disabled(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'height', {\n                    get: function() {\n                        return that._height();\n                    },\n                    set: function(newValue) {\n                        that._height(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rtl', {\n                    get: function() {\n                        return that._rtl();\n                    },\n                    set: function(newValue) {\n                        that._rtl(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'sizeMode', {\n                    get: function() {\n                        return that._sizeMode();\n                    },\n                    set: function(newValue) {\n                        that._sizeMode(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'scrollBarSize', {\n                    get: function() {\n                        return that._scrollBarSize();\n                    },\n                    set: function(newValue) {\n                        that._scrollBarSize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'theme', {\n                    get: function() {\n                        return that._theme();\n                    },\n                    set: function(newValue) {\n                        that._theme(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'width', {\n                    get: function() {\n                        return that._width();\n                    },\n                    set: function(newValue) {\n                        that._width(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            },\n            __wireEvents__: function () {\n                const that = this;\n\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"node_modules/jqwidgets-scripts/jqwidgets-vue"}]}