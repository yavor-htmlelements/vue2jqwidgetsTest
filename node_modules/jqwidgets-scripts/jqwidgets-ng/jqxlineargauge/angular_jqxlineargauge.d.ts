/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
export declare class jqxLinearGaugeComponent implements OnChanges {
    attrAnimationDuration: number;
    attrBackground: jqwidgets.LinearGaugeBackground;
    attrColorScheme: string;
    attrDisabled: boolean;
    attrEasing: string;
    attrInt64: boolean;
    attrLabels: jqwidgets.LinearGaugeLabels | jqwidgets.LinearGaugeLabels[];
    attrMin: number;
    attrMax: number;
    attrOrientation: string;
    attrPointer: jqwidgets.LinearGaugePointer;
    attrRangesOffset: number;
    attrRangeSize: number | string;
    attrRanges: Array<jqwidgets.LinearGaugeRanges>;
    attrShowRanges: boolean;
    attrScaleStyle: any;
    attrScaleLength: number | string;
    attrTicksOffset: Array<number | string>;
    attrTicksPosition: string;
    attrTicksMinor: jqwidgets.LinearGaugeTicks;
    attrTicksMajor: jqwidgets.LinearGaugeTicks;
    attrValue: number;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxLinearGauge;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    animationDuration(arg?: number): number;
    background(arg?: jqwidgets.LinearGaugeBackground): jqwidgets.LinearGaugeBackground;
    colorScheme(arg?: string): string;
    disabled(arg?: boolean): boolean;
    easing(arg?: string): string;
    height(arg?: number | string): number | string;
    int64(arg?: boolean): boolean;
    labels(arg?: jqwidgets.LinearGaugeLabels | jqwidgets.LinearGaugeLabels[]): jqwidgets.LinearGaugeLabels | jqwidgets.LinearGaugeLabels[];
    min(arg?: number): number;
    max(arg?: number): number;
    orientation(arg?: string): string;
    pointer(arg?: jqwidgets.LinearGaugePointer): jqwidgets.LinearGaugePointer;
    rangesOffset(arg?: number): number;
    rangeSize(arg?: number | string): number | string;
    ranges(arg?: Array<jqwidgets.LinearGaugeRanges>): Array<jqwidgets.LinearGaugeRanges>;
    showRanges(arg?: boolean): boolean;
    scaleStyle(arg?: any): any;
    scaleLength(arg?: number | string): number | string;
    ticksOffset(arg?: Array<number | string>): Array<number | string>;
    ticksPosition(arg?: string): string;
    ticksMinor(arg?: jqwidgets.LinearGaugeTicks): jqwidgets.LinearGaugeTicks;
    ticksMajor(arg?: jqwidgets.LinearGaugeTicks): jqwidgets.LinearGaugeTicks;
    value(arg?: number): number;
    width(arg?: number | string): number | string;
    disable(): void;
    enable(): void;
    val(value?: number | string): any;
    onValueChanging: EventEmitter<any>;
    onValueChanged: EventEmitter<any>;
    __wireEvents__(): void;
}
