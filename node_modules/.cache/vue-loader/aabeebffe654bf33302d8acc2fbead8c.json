{"remainingRequest":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxresponsivepanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxresponsivepanel.vue","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\macair1\\Desktop\\jqx-tests\\my-appteest\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport '../jqwidgets/jqxcore.js';\nimport '../jqwidgets/jqxresponsivepanel.js';\n\nexport default {\n    props: {\n        animationDirection: String,\n        animationHideDelay: [String, Number],\n        animationShowDelay: Number,\n        animationType: String,\n        autoClose: Boolean,\n        collapseBreakpoint: Number,\n        collapseWidth: Number,\n        height: [Number, String],\n        initContent: Function,\n        theme: String,\n        toggleButton: String,\n        toggleButtonSize: Number,\n        width: [Number, String],\n        autoCreate: {\n            default: true,\n            type: Boolean\n        }\n    },\n    created: function () {\n        this.id = 'jqxResponsivePanel' + JQXLite.generateID();\n        this.componentSelector = '#' + this.id;\n    },\n    mounted: function () {\n        if (this.autoCreate) this.__createComponent__();\n    },\n    methods: {\n        createComponent: function (options) {\n            if (!this.autoCreate) this.__createComponent__(options)\n            else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n        },\n        setOptions: function (options) {\n            JQXLite(this.componentSelector).jqxResponsivePanel(options);\n        },\n        getOptions: function () {\n            const usedProps = Object.keys(this.__manageProps__());\n            const resultToReturn = {};\n            for (let i = 0; i < usedProps.length; i++) {\n                resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxResponsivePanel(usedProps[i]);\n            }\n            return resultToReturn;\n        },\n        close: function() {\n            JQXLite(this.componentSelector).jqxResponsivePanel('close');  \n        },\n        destroy: function() {\n            JQXLite(this.componentSelector).jqxResponsivePanel('destroy');  \n        },\n        isCollapsed: function() {\n            return JQXLite(this.componentSelector).jqxResponsivePanel('isCollapsed');  \n        },\n        isOpened: function() {\n            return JQXLite(this.componentSelector).jqxResponsivePanel('isOpened');  \n        },\n        open: function() {\n            JQXLite(this.componentSelector).jqxResponsivePanel('open');  \n        },\n        refresh: function() {\n            JQXLite(this.componentSelector).jqxResponsivePanel('refresh');  \n        },\n        render: function() {\n            JQXLite(this.componentSelector).jqxResponsivePanel('render');  \n        },\n        _animationDirection: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('animationDirection', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('animationDirection');\n            }\n        },\n        _animationHideDelay: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('animationHideDelay', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('animationHideDelay');\n            }\n        },\n        _animationShowDelay: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('animationShowDelay', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('animationShowDelay');\n            }\n        },\n        _animationType: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('animationType', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('animationType');\n            }\n        },\n        _autoClose: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('autoClose', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('autoClose');\n            }\n        },\n        _collapseBreakpoint: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('collapseBreakpoint', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('collapseBreakpoint');\n            }\n        },\n        _collapseWidth: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('collapseWidth', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('collapseWidth');\n            }\n        },\n        _height: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('height', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('height');\n            }\n        },\n        _initContent: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('initContent', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('initContent');\n            }\n        },\n        _theme: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('theme', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('theme');\n            }\n        },\n        _toggleButton: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('toggleButton', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('toggleButton');\n            }\n        },\n        _toggleButtonSize: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('toggleButtonSize', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('toggleButtonSize');\n            }\n        },\n        _width: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxResponsivePanel('width', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('width');\n            }\n        },\n        __createComponent__: function (options) {\n            let widgetOptions;\n            options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n            JQXLite(this.componentSelector).jqxResponsivePanel(widgetOptions);\n            this.__extendProps__();\n            this.__wireEvents__();\n        },\n        __manageProps__: function () {\n            const widgetProps = ['animationDirection','animationHideDelay','animationShowDelay','animationType','autoClose','collapseBreakpoint','collapseWidth','height','initContent','theme','toggleButton','toggleButtonSize','width'];\n            const componentProps = this.$options.propsData;\n            let options = {};\n\n            for (let prop in componentProps) {\n                if (widgetProps.indexOf(prop) !== -1) {\n                    options[prop] = componentProps[prop];\n                }\n            }\n            return options;\n        },\n        __extendProps__: function () {\n            const that = this;\n\n            Object.defineProperty(that, 'animationDirection', {\n                get: function() {\n                    return that._animationDirection();\n                },\n                set: function(newValue) {\n                    that._animationDirection(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'animationHideDelay', {\n                get: function() {\n                    return that._animationHideDelay();\n                },\n                set: function(newValue) {\n                    that._animationHideDelay(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'animationShowDelay', {\n                get: function() {\n                    return that._animationShowDelay();\n                },\n                set: function(newValue) {\n                    that._animationShowDelay(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'animationType', {\n                get: function() {\n                    return that._animationType();\n                },\n                set: function(newValue) {\n                    that._animationType(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'autoClose', {\n                get: function() {\n                    return that._autoClose();\n                },\n                set: function(newValue) {\n                    that._autoClose(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'collapseBreakpoint', {\n                get: function() {\n                    return that._collapseBreakpoint();\n                },\n                set: function(newValue) {\n                    that._collapseBreakpoint(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'collapseWidth', {\n                get: function() {\n                    return that._collapseWidth();\n                },\n                set: function(newValue) {\n                    that._collapseWidth(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'height', {\n                get: function() {\n                    return that._height();\n                },\n                set: function(newValue) {\n                    that._height(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'initContent', {\n                get: function() {\n                    return that._initContent();\n                },\n                set: function(newValue) {\n                    that._initContent(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'theme', {\n                get: function() {\n                    return that._theme();\n                },\n                set: function(newValue) {\n                    that._theme(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'toggleButton', {\n                get: function() {\n                    return that._toggleButton();\n                },\n                set: function(newValue) {\n                    that._toggleButton(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'toggleButtonSize', {\n                get: function() {\n                    return that._toggleButtonSize();\n                },\n                set: function(newValue) {\n                    that._toggleButtonSize(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'width', {\n                get: function() {\n                    return that._width();\n                },\n                set: function(newValue) {\n                    that._width(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n        },\n        __wireEvents__: function () {\n            const that = this;\n\n            JQXLite(this.componentSelector).on('close', function (event) { that.$emit('close', event); });\n            JQXLite(this.componentSelector).on('collapse', function (event) { that.$emit('collapse', event); });\n            JQXLite(this.componentSelector).on('expand', function (event) { that.$emit('expand', event); });\n            JQXLite(this.componentSelector).on('open', function (event) { that.$emit('open', event); });\n        }\n    }\n}\n",{"version":3,"sources":["vue_jqxresponsivepanel.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vue_jqxresponsivepanel.vue","sourceRoot":"node_modules/jqwidgets-scripts/jqwidgets-vue","sourcesContent":["<template>\n    <div v-bind:id=\"id\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import '../jqwidgets/jqxcore.js';\n    import '../jqwidgets/jqxresponsivepanel.js';\n\n    export default {\n        props: {\n            animationDirection: String,\n            animationHideDelay: [String, Number],\n            animationShowDelay: Number,\n            animationType: String,\n            autoClose: Boolean,\n            collapseBreakpoint: Number,\n            collapseWidth: Number,\n            height: [Number, String],\n            initContent: Function,\n            theme: String,\n            toggleButton: String,\n            toggleButtonSize: Number,\n            width: [Number, String],\n            autoCreate: {\n                default: true,\n                type: Boolean\n            }\n        },\n        created: function () {\n            this.id = 'jqxResponsivePanel' + JQXLite.generateID();\n            this.componentSelector = '#' + this.id;\n        },\n        mounted: function () {\n            if (this.autoCreate) this.__createComponent__();\n        },\n        methods: {\n            createComponent: function (options) {\n                if (!this.autoCreate) this.__createComponent__(options)\n                else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n            },\n            setOptions: function (options) {\n                JQXLite(this.componentSelector).jqxResponsivePanel(options);\n            },\n            getOptions: function () {\n                const usedProps = Object.keys(this.__manageProps__());\n                const resultToReturn = {};\n                for (let i = 0; i < usedProps.length; i++) {\n                    resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxResponsivePanel(usedProps[i]);\n                }\n                return resultToReturn;\n            },\n            close: function() {\n                JQXLite(this.componentSelector).jqxResponsivePanel('close');  \n            },\n            destroy: function() {\n                JQXLite(this.componentSelector).jqxResponsivePanel('destroy');  \n            },\n            isCollapsed: function() {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('isCollapsed');  \n            },\n            isOpened: function() {\n                return JQXLite(this.componentSelector).jqxResponsivePanel('isOpened');  \n            },\n            open: function() {\n                JQXLite(this.componentSelector).jqxResponsivePanel('open');  \n            },\n            refresh: function() {\n                JQXLite(this.componentSelector).jqxResponsivePanel('refresh');  \n            },\n            render: function() {\n                JQXLite(this.componentSelector).jqxResponsivePanel('render');  \n            },\n            _animationDirection: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('animationDirection', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('animationDirection');\n                }\n            },\n            _animationHideDelay: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('animationHideDelay', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('animationHideDelay');\n                }\n            },\n            _animationShowDelay: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('animationShowDelay', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('animationShowDelay');\n                }\n            },\n            _animationType: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('animationType', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('animationType');\n                }\n            },\n            _autoClose: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('autoClose', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('autoClose');\n                }\n            },\n            _collapseBreakpoint: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('collapseBreakpoint', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('collapseBreakpoint');\n                }\n            },\n            _collapseWidth: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('collapseWidth', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('collapseWidth');\n                }\n            },\n            _height: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('height', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('height');\n                }\n            },\n            _initContent: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('initContent', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('initContent');\n                }\n            },\n            _theme: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('theme', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('theme');\n                }\n            },\n            _toggleButton: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('toggleButton', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('toggleButton');\n                }\n            },\n            _toggleButtonSize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('toggleButtonSize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('toggleButtonSize');\n                }\n            },\n            _width: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxResponsivePanel('width', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxResponsivePanel('width');\n                }\n            },\n            __createComponent__: function (options) {\n                let widgetOptions;\n                options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n                JQXLite(this.componentSelector).jqxResponsivePanel(widgetOptions);\n                this.__extendProps__();\n                this.__wireEvents__();\n            },\n            __manageProps__: function () {\n                const widgetProps = ['animationDirection','animationHideDelay','animationShowDelay','animationType','autoClose','collapseBreakpoint','collapseWidth','height','initContent','theme','toggleButton','toggleButtonSize','width'];\n                const componentProps = this.$options.propsData;\n                let options = {};\n\n                for (let prop in componentProps) {\n                    if (widgetProps.indexOf(prop) !== -1) {\n                        options[prop] = componentProps[prop];\n                    }\n                }\n                return options;\n            },\n            __extendProps__: function () {\n                const that = this;\n\n                Object.defineProperty(that, 'animationDirection', {\n                    get: function() {\n                        return that._animationDirection();\n                    },\n                    set: function(newValue) {\n                        that._animationDirection(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'animationHideDelay', {\n                    get: function() {\n                        return that._animationHideDelay();\n                    },\n                    set: function(newValue) {\n                        that._animationHideDelay(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'animationShowDelay', {\n                    get: function() {\n                        return that._animationShowDelay();\n                    },\n                    set: function(newValue) {\n                        that._animationShowDelay(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'animationType', {\n                    get: function() {\n                        return that._animationType();\n                    },\n                    set: function(newValue) {\n                        that._animationType(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'autoClose', {\n                    get: function() {\n                        return that._autoClose();\n                    },\n                    set: function(newValue) {\n                        that._autoClose(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'collapseBreakpoint', {\n                    get: function() {\n                        return that._collapseBreakpoint();\n                    },\n                    set: function(newValue) {\n                        that._collapseBreakpoint(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'collapseWidth', {\n                    get: function() {\n                        return that._collapseWidth();\n                    },\n                    set: function(newValue) {\n                        that._collapseWidth(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'height', {\n                    get: function() {\n                        return that._height();\n                    },\n                    set: function(newValue) {\n                        that._height(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'initContent', {\n                    get: function() {\n                        return that._initContent();\n                    },\n                    set: function(newValue) {\n                        that._initContent(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'theme', {\n                    get: function() {\n                        return that._theme();\n                    },\n                    set: function(newValue) {\n                        that._theme(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'toggleButton', {\n                    get: function() {\n                        return that._toggleButton();\n                    },\n                    set: function(newValue) {\n                        that._toggleButton(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'toggleButtonSize', {\n                    get: function() {\n                        return that._toggleButtonSize();\n                    },\n                    set: function(newValue) {\n                        that._toggleButtonSize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'width', {\n                    get: function() {\n                        return that._width();\n                    },\n                    set: function(newValue) {\n                        that._width(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            },\n            __wireEvents__: function () {\n                const that = this;\n\n                JQXLite(this.componentSelector).on('close', function (event) { that.$emit('close', event); });\n                JQXLite(this.componentSelector).on('collapse', function (event) { that.$emit('collapse', event); });\n                JQXLite(this.componentSelector).on('expand', function (event) { that.$emit('expand', event); });\n                JQXLite(this.componentSelector).on('open', function (event) { that.$emit('open', event); });\n            }\n        }\n    }\n</script>\n"]}]}